<?xml version="1.0" encoding="UTF-8"?>
<Module DBSchema="Primary" DBVersion="2.49">
  <Parameters>
    <Parameter>
      <Name>HSDA_ENABLE</Name>
      <UID>4b077949dd239fc44b9494d492997e7d</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>0</DefaultValue>
      <Description>Enable for HSDA</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>BW_EN</Name>
      <UID>b4267c44887d667a88e115d93b4dd990</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>1</DefaultValue>
      <Description>Enable for Bandwidth Monitor (BWLCNT, BWLCNT_CUR, BWMCNT, BWMCNT_CUR)</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>EB_MDMA_RD</Name>
      <UID>f0464ad7e8ec9cc17d1236f54909152b</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>0</DefaultValue>
      <Description>Equals 1, on DDE instance is an Enhanced Bandwidth MDMA read instance</Description>
      <DocSets>
        <Set1>
          <Description>Equals 1 if DDE instance is an Enhanced Bandwidth MDMA read instance</Description>
        </Set1>
      </DocSets>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>EB_MDMA_WR</Name>
      <UID>de07f13dacd5ae55d996aa05bea00478</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>0</DefaultValue>
      <Description>Equals 1 if this DDE instance is an Enhanced Bandwidth MDMA write instance</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>DMA_FROM_MODULE</Name>
      <UID>6da606af6f0be1b5dc8ec6ee5135903b</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>0</DefaultValue>
      <Description>Equals 1 if interrupt/trigger ports are emitted by the DDE module instead of by each individual module (SPI, SPORT, etc)</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>AGGREGATE_ERRORS</Name>
      <UID>e7b8b250703e3e592c7a3227a28a33c8</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>0</DefaultValue>
      <Description>Equals 1 if DMA errors are aggregated at the system level, and therefore not individually itemized by channel.</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>PBWIDTH</Name>
      <UID>4a1c1be39d1d428920c8ee3be71dfea86c12d975</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>4</DefaultValue>
      <Description>Peripheral Bus Width (in Bytes)</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>MBWIDTH</Name>
      <UID>0cdf845cafcc867c11edfe4d40e130cd6403887c</UID>
      <Condition>True</Condition>
      <DataType>Integer</DataType>
      <DefaultValue>4</DefaultValue>
      <Description>Memory Bus Width (in Bytes)</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
    <Parameter>
      <Name>SCLK</Name>
      <UID>9ed279fe419e0bb0936cefa4c647fbd48221558a</UID>
      <Condition>True</Condition>
      <DataType>String</DataType>
      <DefaultValue>SCLK</DefaultValue>
      <Description>The name of the SCLK this block is connected to (SCLK[012])</Description>
      <Documentation></Documentation>
      <Notes></Notes>
      <Scope>Input</Scope>
      <User></User>
      <Visibility>Private</Visibility>
    </Parameter>
  </Parameters>
  <Properties>
    <HardwareName></HardwareName>
    <SoftwareName>&lt;Inherit&gt;</SoftwareName>
    <Description>The Direct Memory Access module</Description>
    <Documentation>The DMA channel controller (${.}) supports data transfers within memory spaces or
      between a memory space and a peripheral. The processor can specify data transfer operations
      and return to normal processing while the fully integrated DMA channel carries out the data
      transfers independent of processor activity. The DMA channels are dispersed throughout the
      infrastructure, as ${.}n's. A set of registers governs ${.} operations. For more information
      on ${.} functionality, see the ${.} register descriptions.</Documentation>
    <Address>'h0000</Address>
    <AddressUnitBits>8</AddressUnitBits>
    <ByteOrder>LittleEndian</ByteOrder>
    <AddressWidth>'d9</AddressWidth>
    <BitFieldScope>Global</BitFieldScope>
    <RegisterScope>Global</RegisterScope>
    <ReserveOption>AutomaticReadZero</ReserveOption>
    <NameSpaceProtection>True</NameSpaceProtection>
    <EnumerationScope>Local</EnumerationScope>
    <MemoryAccessMethod>MemoryMappedRegister</MemoryAccessMethod>
    <Notes></Notes>
    <User></User>
    <UserExtensions></UserExtensions>
    <GeneratorOptions></GeneratorOptions>
    <Dictionary></Dictionary>
    <VariantContext>Generic</VariantContext>
    <ModuleEditMode>Engineering</ModuleEditMode>
    <DocSetToUse>DS1</DocSetToUse>
  </Properties>
  <PageMasks>
  </PageMasks>
  <PhaseMasks>
  </PhaseMasks>
  <Ports>
    <Port>
      <Name>ERR</Name>
      <UID>b0bc96f0ae47159470719f449757b59f</UID>
      <ArrayEnabled>False</ArrayEnabled>
      <ArrayLetter>n</ArrayLetter>
      <ArrayFrom>0</ArrayFrom>
      <ArrayTo>2</ArrayTo>
      <ArrayBy>1</ArrayBy>
      <ChipSignal>False</ChipSignal>
      <DMAChannel>False</DMAChannel>
      <Description>Error interrupt</Description>
      <Direction>Output</Direction>
      <Documentation></Documentation>
      <Exists>=((DMA_FROM_MODULE == 1) &amp;&amp; (AGGREGATE_ERRORS == 0))</Exists>
      <Interrupt>True</Interrupt>
      <Notes></Notes>
      <Polarity>ActiveHigh</Polarity>
      <PortType>I/O</PortType>
      <Sensitivity>Level</Sensitivity>
      <Trigger>None</Trigger>
      <User></User>
      <Visibility>Public</Visibility>
      <Width>1</Width>
    </Port>
    <Port>
      <Name>INT</Name>
      <UID>03b5eb4f9d74207ffc1e668f5598886f</UID>
      <ArrayEnabled>False</ArrayEnabled>
      <ArrayLetter>n</ArrayLetter>
      <ArrayFrom>0</ArrayFrom>
      <ArrayTo>2</ArrayTo>
      <ArrayBy>1</ArrayBy>
      <ChipSignal>False</ChipSignal>
      <DMAChannel>False</DMAChannel>
      <Description>Done interrupt</Description>
      <Direction>Output</Direction>
      <Documentation></Documentation>
      <Exists>=(DMA_FROM_MODULE == 1)</Exists>
      <Interrupt>True</Interrupt>
      <Notes></Notes>
      <Polarity>ActiveHigh</Polarity>
      <PortType>I/O</PortType>
      <Sensitivity>Level</Sensitivity>
      <Trigger>None</Trigger>
      <User></User>
      <Visibility>Public</Visibility>
      <Width>1</Width>
    </Port>
    <Port>
      <Name>MST</Name>
      <UID>5710eb954cea34ba575ca62749760f6c</UID>
      <ArrayEnabled>False</ArrayEnabled>
      <ArrayLetter>n</ArrayLetter>
      <ArrayFrom>0</ArrayFrom>
      <ArrayTo>2</ArrayTo>
      <ArrayBy>1</ArrayBy>
      <ChipSignal>False</ChipSignal>
      <DMAChannel>False</DMAChannel>
      <Description>Trigger Master</Description>
      <Direction>Output</Direction>
      <Documentation></Documentation>
      <Exists>=(DMA_FROM_MODULE == 1)</Exists>
      <Interrupt>False</Interrupt>
      <Notes></Notes>
      <Polarity>ActiveHigh</Polarity>
      <PortType>I/O</PortType>
      <Sensitivity>Edge</Sensitivity>
      <Trigger>Main</Trigger>
      <User></User>
      <Visibility>Public</Visibility>
      <Width>1</Width>
    </Port>
    <Port>
      <Name>SLV0</Name>
      <UID>4b13c07489927a00b82bc4b60e8eabe7</UID>
      <ArrayEnabled>False</ArrayEnabled>
      <ArrayLetter>n</ArrayLetter>
      <ArrayFrom>0</ArrayFrom>
      <ArrayTo>2</ArrayTo>
      <ArrayBy>1</ArrayBy>
      <ChipSignal>False</ChipSignal>
      <DMAChannel>False</DMAChannel>
      <Description>Trigger Slave 0</Description>
      <Direction>Input</Direction>
      <Documentation></Documentation>
      <Exists>=(DMA_FROM_MODULE == 1)</Exists>
      <Interrupt>False</Interrupt>
      <Notes></Notes>
      <Polarity>ActiveHigh</Polarity>
      <PortType>I/O</PortType>
      <Sensitivity>None</Sensitivity>
      <Trigger>Sub</Trigger>
      <User></User>
      <Visibility>Public</Visibility>
      <Width>1</Width>
    </Port>
    <Port>
      <Name>int_fwd_condition</Name>
      <UID>17c6667ea639f3dabaac3eb10224b6b1087ab042</UID>
      <ArrayEnabled>False</ArrayEnabled>
      <ArrayLetter>n</ArrayLetter>
      <ArrayFrom>0</ArrayFrom>
      <ArrayTo>2</ArrayTo>
      <ArrayBy>1</ArrayBy>
      <ChipSignal>False</ChipSignal>
      <DMAChannel>False</DMAChannel>
      <Description>Signal for DAB bridge</Description>
      <Direction>Output</Direction>
      <Documentation></Documentation>
      <Exists>True</Exists>
      <Interrupt>False</Interrupt>
      <Notes></Notes>
      <Polarity>ActiveHigh</Polarity>
      <PortType>I/O</PortType>
      <Sensitivity>Edge</Sensitivity>
      <Trigger>None</Trigger>
      <User></User>
      <Visibility>Public</Visibility>
      <Width>1</Width>
    </Port>
    <Port>
      <Name>interrupt_2_sic</Name>
      <UID>f0b3f1b00a4f5a4a3cc0b743b15f743c0235d20d</UID>
      <ArrayEnabled>False</ArrayEnabled>
      <ArrayLetter>n</ArrayLetter>
      <ArrayFrom>0</ArrayFrom>
      <ArrayTo>2</ArrayTo>
      <ArrayBy>1</ArrayBy>
      <ChipSignal>False</ChipSignal>
      <DMAChannel>False</DMAChannel>
      <Description>Interrupt based on PDRF bits</Description>
      <Direction>Output</Direction>
      <Documentation></Documentation>
      <Exists>True</Exists>
      <Interrupt>False</Interrupt>
      <Notes></Notes>
      <Polarity>ActiveHigh</Polarity>
      <PortType>I/O</PortType>
      <Sensitivity>Edge</Sensitivity>
      <Trigger>None</Trigger>
      <User></User>
      <Visibility>Public</Visibility>
      <Width>1</Width>
    </Port>
  </Ports>
  <MemoryMap>
    <BitFields>
      <UID>6b0b075b2a14d871aea5be0a1721b559d4b6a8b2</UID>
      <BitField>
        <Name>ADDRCURR</Name>
        <UID>2fffa2b694fad547e18dd05a055a1f2a</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit current address value</Description>
        <DocSets>
          <Set1>
            <Description>Work Unit Current Address Value</Description>
            <Documentation>The ${.:.:.} bit field contains the present memory transfer address for a
              given work unit.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>0</UIMinValue>
        <UIMaxValue>4294967295</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>ADDRSTART</Name>
        <UID>43f2ea804a7dc47e90b803ba8fd14609</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit address start value</Description>
        <DocSets>
          <Set1>
            <Description>Work Unit Address Start Value</Description>
            <Documentation>The ${.:.:.} bit field contains the start address of the work unit
              currently targeted for DMA.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>0</UIMinValue>
        <UIMaxValue>4294967295</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>BWLCOUNT</Name>
        <UID>f0570168b1d89c39f095b2964eab40a5</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Bandwidth Limit Count</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains a count that determines how often the
              ${.} issues memory transactions.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>16</Width>
      </BitField>
      <BitField>
        <Name>BWLCOUNTCURR</Name>
        <UID>d63ccdd367e840c22de88dcbcd5d4142</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Bandwidth Limit Count Current</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains the number of  \eval{SCLK} count cycles remaining
              before the next request is issued.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>16</Width>
      </BitField>
      <BitField>
        <Name>BWMCOUNT</Name>
        <UID>e09f3dedee92e9fa765040fb1fc201bc</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Bandwidth Monitor Count</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains the maximum number of  \eval{SCLK} cycles allowed
              for a work unit to complete.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>BWMCOUNTCURR</Name>
        <UID>d1602802a8dedb7a5419a02a4caa0f99</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Bandwidth Monitor Count Current</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains the number of cycles remaining for the
              current descriptor to complete.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>CADDR</Name>
        <UID>62eab160bca1e76192a959bc708f47f6</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Use Current Address</Description>
        <Documentation>When the ${.:.:.} bit is cleared, the ${.} loads the ${.:ADDRSTART} register
          on the first access of the work unit. When the ${.:.:.} bit is set, the ${.} uses the
          ${.:ADDRCURR} register value for the starting address for the work unit and writes the
          same value to the ${.:ADDRSTART} register.$[/p$] $[p$]This operation permits continuation
          of a previous work unit. When DMA uses this mode, the fetched start address value (as part
          of the descriptor set at the end of a descriptor list or array) is
          ignored.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>=__AUTO__</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>LD_STARTADDR</Name>
            <UID>15bacb25f983e2b88ee97014b0caab09</UID>
            <Description>Load Starting Address</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>LD_CURADDR</Name>
            <UID>6d0dda7fe58d25caf52512aeb19458da</UID>
            <Description>Use Current Address</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>CONFIG_TWAIT</Name>
        <UID>d7b0f697191907423d92b9316126fecf</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Wait for Trigger</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit controls whether the ${.} waits for an incoming trigger from
          another channel or user. If the ${.:.:.} bit is set, the ${.} enters the wait state before
          starting the next work unit, including descriptor fetch when in descriptor mode. Do not use
          the wait for trigger control for descriptor-on-demand mode which causes an error. For more
          information, see the trigger section of the ${.} functional description.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} controls whether the ${.} waits for an incoming trigger from
          another channel or user. If ${.:.:.} is set, the ${.} enters the wait state before
          starting the next work unit, including descriptor fetch if in descriptor mode. Do not use
          the wait for trigger control for descriptor-on-demand mode which causes an error. For more
          information, see the trigger section of the ${.} functional description.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_TRGWAIT</Name>
            <UID>46ced0566d06f02e7e7e2ae334fd92af</UID>
            <Description>Begin Work Unit Automatically (No Wait)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>TRGWAIT</Name>
            <UID>ec4caa38705f15f227483fdb1fae413a</UID>
            <Description>Wait for Trigger (Halt before Work Unit)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>DBURST</Name>
        <UID>75478580f59a7e2c218fac7c474c865b</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Descriptor bursting in HSDA mode</Description>
        <DocSets>
          <Set1>
            <Description>Descriptor Bursting (HSDA Mode)</Description>
            <Documentation>The ${.:.:.} defines how the ${.} makes descriptor requests in High Speed
              Descriptor Array mode. If set =1, only bursts of 4 descriptors together are issued. If
              cleared =0, burst length may vary and depends on the number of locations available for
              descriptors in the descriptor prefetch FIFO.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} defines how the ${.} makes descriptor requests in High-Speed
          Descriptor Array mode. When this bit is set, only bursts of 4 descriptors are issued
          together. When the ${.:.:.} bit is cleared, the burst length varies depending on the
          number of locations available for descriptors in the descriptor prefetch
          FIFO.</Documentation>
        <Exists>=(HSDA_ENABLE == 1)</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Boolean</UIUIType>
        <UIWidget>CheckBox</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;;</User>
        <Width>1</Width>
      </BitField>
      <BitField>
        <Name>DESCIDCPY</Name>
        <UID>60dee20023bbd2e2fa32e7a4f2ed3be9</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Descriptor ID Copy Control</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit specifies when to copy the initial descriptor pointer to the
          ${.:DSCPTR_PRV} register. $[/p$]$[p$]A bus write to the ${.:.} register to clear the
          ${.:.:EN} bit causes the ${.} to immediately use the new value of the ${.:.:.} bit. To
          preserve consistency (if required by application), match the new value of this bit to the
          previous value.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} specifies when to copy the initial descriptor pointer to the
          ${.:DESCPPREV} register. $[/p$]$[p$]A bus write to the ${.:.} register clears the
          ${.:.:EN} bit, causing the ${.} to immediately use the new value of the ${.:.:.} bit. To
          preserve consistency (if required by application), match the new value of this bit to the
          previous value.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_COPY</Name>
            <UID>549c7e89113b7f18ca90f240455a805a</UID>
            <Description>Never Copy</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>COPY</Name>
            <UID>96393f93c542e3f7b050908f50538ccb</UID>
            <Description>Copy on Work Unit Complete</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>DESCPCURR</Name>
        <UID>92694c7c859ded7c7f871661638dda17</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Pointer for Current Descriptor Element</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains the memory address for the next
              descriptor to be loaded.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>0</UIMinValue>
        <UIMaxValue>4294967295</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>DESCPNEXT</Name>
        <UID>3fe732dfb155d0ed082eef5da72a2b15</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Pointer To Next Descriptor Set</Description>
        <DocSets>
          <Set1>
            <Description>Pointer to Next Descriptor Set</Description>
            <Documentation>The ${.:.:.} bit field specifies the start location of the next
              descriptor set.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>0</UIMinValue>
        <UIMaxValue>4294967295</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>DESCPPREV</Name>
        <UID>f3e484d584b3ec1f3f98d4e7245afed3</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Pointer for Previous Descriptor Element</Description>
        <DocSets>
          <Set1>
            <Description>Descriptor Pointer for Previous Element</Description>
            <Documentation>The ${.:.:.} bit field contains the initial descriptor pointer for the
              previous work unit.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>0</UIMinValue>
        <UIMaxValue>1073741823</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>30</Width>
      </BitField>
      <BitField>
        <Name>EN</Name>
        <UID>1d28efe748d73ee3942db2a6bca072e0</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>DMA Channel Enable</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit enables the selected DMA channel. $[/p$] $[p$]When a peripheral
          DMA channel is enabled, data requests from the peripheral denote DMA requests. When a
          channel is disabled, the DMA unit ignores the peripheral data request and passes it
          directly to the system event controller. $[/p$]$[p$]To avoid unexpected results, enable
          the DMA channel before enabling the peripheral, and disable the peripheral before
          disabling the DMA channel. $[/p$]$[p$]A transition of the ${.:.:.} bit from 0 to 1 creates
          a hard reset of all internal counters and states, including the ${.:STAT} register. (All
          other register values remain unaffected.) A transition from 1 to 0 maintains all counters
          and registers for reading and analysis. $[/p$] $[p$]Note that if a descriptor loads when
          this bit is cleared (see the ${.:.:FLOW} field), the ${.} transitions to the off or idle state
          after the descriptor load is complete.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} enables the selected DMA channel. $[/p$] $[p$]When a peripheral
          DMA channel is enabled, data requests from the peripheral denote DMA requests. When a
          channel is disabled, the DMA unit ignores the peripheral data request and passes it
          directly to the system event controller. $[/p$]$[p$]To avoid unexpected results, enable
          the DMA channel before enabling the peripheral, and disable the peripheral before
          disabling the DMA channel. $[/p$]$[p$]A transition of the ${.:.:.} bit from 0 to 1 creates
          a hard reset of all internal counters and states, including the ${.:STATUS} register. (All
          other register values remain unaffected.) A transition from 1 to 0 maintains all counters
          and registers for reading and analysis. $[/p$] $[p$]Note that if a descriptor loads when
          this bit is cleared (see ${.:.:FLOW} field), the ${.} transitions to the off or idle state
          after the descriptor load is complete.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>DIS</Name>
            <UID>6080e861224d2d73255cd3f4c9dadb5a</UID>
            <Description>Disable</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>EN</Name>
            <UID>7e834c6442e4f14b5e4501ad8b51ac8b</UID>
            <Description>Enable</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>ERRC</Name>
        <UID>0e79b2a8e81c2bf2358a4b3bb9767abc</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Error Cause</Description>
        <DocSets>
          <Set1>
            <Documentation>When an interrupt request error occurs (${.:.:IRQERR}), the ${.} updates the
          ${.:.:.} bit field to identify the type of error. For more information, see the errors section of
          the ${.} functional description.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>When an interrupt request error occurs (${.:.:IRQERR}), the ${.} updates
          ${.:.:.} to identify the type of error. For more information, see the errors section of
          the ${.} functional description.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>CFGERR</Name>
            <UID>2db921802dab609766a911ee7dad8fe6</UID>
            <Description>Configuration Error</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>ILLWRERR</Name>
            <UID>02afb2613d2809d764a1fa995b78fca2</UID>
            <Description>Illegal Write Occurred While Channel Running</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>ALGNERR</Name>
            <UID>f13681022dfa278e84638564fba73473</UID>
            <Description>Address Alignment Error</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MEMERR</Name>
            <UID>42bce7674abe642e8a17aec0192e0b6c</UID>
            <Description>Memory Access or Fabric Error</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>ERRC_NOUSE1</Name>
            <UID>d7961c41e7a8ea6bfd3c1de93ea6019b</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>TRGOVERR</Name>
            <UID>6af49105efaed3c69cd385df1a2f9712</UID>
            <Description>Trigger Overrun</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>BWMONERR</Name>
            <UID>d214beb97abb8e40e900c9d7c4b9a087</UID>
            <Description>Bandwidth Monitor Error</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>110</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>ERRC_NOUSE2</Name>
            <UID>562e48dde5610891a3a64da2b54502f4</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>111</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>FIFOFILL</Name>
        <UID>8b7eab8d4d2622721625c8a5032a80a8</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>FIFO Fill Status</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field reports the quantity of data in the FIFO relative to available
          space.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} reports the quantity of data in the FIFO relative to available
          space.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>FIFOEMPTY</Name>
            <UID>01f5ddec5703e6b64e20c86be9f21be3</UID>
            <Description>Empty</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFO25</Name>
            <UID>87a65988b6f476aaa305f0a16d37b7bf</UID>
            <Description>Empty &lt; FIFO = 1/4 Full</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFO50</Name>
            <UID>383286e35ea207f29ef3ba6c52a3982f</UID>
            <Description>1/4 Full &lt; FIFO = 1/2 Full</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFO75</Name>
            <UID>58bb68ada636bb224c88041e50531cee</UID>
            <Description>1/2 Full &lt; FIFO = 3/4 Full</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFONEARFULL</Name>
            <UID>589ffe7363c610641aee76f2c3898069</UID>
            <Description>3/4 Full &lt; FIFO = Full</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFOFILL_NOUSE1</Name>
            <UID>fd26dd37f7ee267317671f1598e2d1d2</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFOFILL_NOUSE2</Name>
            <UID>4a8dc186d6830010daeb71b2ff00af52</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>110</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FIFOFULL</Name>
            <UID>a28e1dda6f99871f552bb8f245a95396</UID>
            <Description>Full</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>111</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>FLAVOR_ID</Name>
        <UID>12591768f024124afb166e9f393979f449fc0de2</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>2</DefaultValue>
        <Description>A representation of flavor or source of the IP</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>4</Width>
      </BitField>
      <BitField>
        <Name>FLOW</Name>
        <UID>db6100adedc5b23e4fd77b45b94e5890</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Next Operation</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field selects the descriptor handling options.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} selects descriptor handling options.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>STOP</Name>
            <UID>d81bf65b0ac2affcf13ef7826d45ac0c</UID>
            <Description>STOP - Stop</Description>
            <DocSets>
              <Set1>
                <Description>STOP.</Description>
                <Documentation>See the Stop Flow Mode section.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>When the current work unit completes, the DMA channel stops
              automatically, after signaling an interrupt (if selected). The ${.:STATUS:RUN} status
              bit changes to idle, while ${.:.:EN} bit is unchanged. In this state, the channel
              stops. DMA continues to filter out peripheral interrupts. The channel restarts using
              another write (with the ${.:.:EN} set) to the ${.:.} register specifying the next work
              unit.</Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>AUTO</Name>
            <UID>ecb6cb47f3b9150ed4fe401a6ca192d6</UID>
            <Description>AUTO - Autobuffer</Description>
            <DocSets>
              <Set1>
                <Description>AUTO.</Description>
                <Documentation>See the Autobuffer Flow Mode section.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>In this mode, descriptors in memory are not used. Instead, DMA is done in
              a continuous circular buffer fashion based on programmed DMA MMR settings. On
              completion of the work unit, the parameter registers reload into the current
              registers, and DMA resumes immediately with zero overhead. This mode is a succession
              of automatically restarted work units. Autobuffer mode stops when the program writes 0
              to the ${.:.:EN} bit.</Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FLOW_NOUSE1</Name>
            <UID>fbb1ffa010a0380ae08cbda4a48cde84</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FLOW_NOUSE2</Name>
            <UID>203a6e3f10b386b43c9f4b23b260c7e6</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>DSCLIST</Name>
            <UID>cb764bc1373d3bb3cf9b941dcd4df1c5</UID>
            <Description>DSCL - Descriptor List</Description>
            <DocSets>
              <Set1>
                <Description>DSCL.</Description>
                <Documentation>See the Descriptor List Mode section.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>This mode fetches a descriptor Set from memory that includes
              ${.:DESCPNEXT}, allowing maximum flexibility in locating descriptors in
              memory.</Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>DSCARRAY</Name>
            <UID>8c8ca34dd9a0ede0aca59ec4b8ee24c1</UID>
            <Description>DSCA - Descriptor Array</Description>
            <DocSets>
              <Set1>
                <Description>DSCA.</Description>
                <Documentation>See the Descriptor Array Mode section.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>This mode fetches a descriptor set from memory that does not include the
              ${.:DESCPNEXT} element. Because the descriptor set does not contain a next descriptor
              pointer entry, the ${.} defaults to using the ${.:DESCPCURR} register to step through
              descriptors. This allows a group of descriptors sets to follow one another in memory
              as an array.</Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>DODLIST</Name>
            <UID>f36d0909d166eb71167506f1f2a1ccd3</UID>
            <Description>Descriptor On-Demand List</Description>
            <DocSets>
              <Set1>
                <Description>Descriptor On-Demand List.</Description>
                <Documentation>See the Descriptor List Mode section.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>This mode fetches a descriptor set from memory that includes
              ${.:DESCPNEXT}. At the end of the work unit, if the channel has not triggered, the
              work unit repeats. If the channel has triggered before the end of the work unit, the
              ${.} fetches a new descriptor set.</Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>110</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>DODARRAY</Name>
            <UID>14aed909927b123107b4ab30955da930</UID>
            <Description>Descriptor On-Demand Array</Description>
            <DocSets>
              <Set1>
                <Description>Descriptor On Demand Array.</Description>
                <Documentation>See the Descriptor On Demand section.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>This mode fetches a descriptor set from memory that does not include
              ${.:DESCPNEXT}. At the end of the work unit, if the channel has not triggered, the
              work unit repeats. If the channel has triggered before the end of the work unit, the
              ${.} fetches a new descriptor set. Because the descriptor set does not contain a next
              descriptor pointer entry, the ${.} defaults to using the ${.:DESCPCURR} register to
              step through descriptors. This allows a group of descriptors sets to follow one
              another in memory as an array.</Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>111</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>HSDA</Name>
        <UID>afbbc9abbaa7fb682e5ce3e34f8b8867</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>High-Speed Descriptor Array mode</Description>
        <DocSets>
          <Set1>
            <Description>High Speed Descriptor Array Mode</Description>
            <Documentation>The ${.:.:.} defines whether the ${.} incorporates features of descriptor
              prefetch and data pipelining across work units when working in descriptor array mode.
              This feature is intended to be used only in MDMAs.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} defines whether the ${.} incorporates features of descriptor
          prefetch and data pipelining across work units, when working in Descriptor Array mode. Use
          this feature only in MDMAs.</Documentation>
        <Exists>=(HSDA_ENABLE == 1)</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Boolean</UIUIType>
        <UIWidget>CheckBox</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;;</User>
        <Width>1</Width>
      </BitField>
      <BitField>
        <Name>INT</Name>
        <UID>38f1520d29caac964cdfa78cfa118e39</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Generate Interrupt</Description>
        <DocSets>
          <Set1>
            <Description>Generate Interrupt Request</Description>
            <Documentation>The ${.:.:.} bit field selects whether an interrupt request goes to the core based on
          work unit status or a peripheral interrupt request.$[/p$] $[p$]For one-dimensional mode,
          setting the ${.:.:.} bits to generate an interrupt request when the ${.:YCNT_CUR} register reaches
          0 causes the ${.} to flag a configuration error.$[/p$]$[p$]The peripheral interrupt
          setting lets the ${.} generate the last grant indication and to accept and or forward the
          peripheral interrupt command.$[/p$]$[p$] The peripheral interrupt selection applies only
          to the ${.:.:FLOW} bits set for stop and the ${.:.:WNR} bits set for memory read. $[/p$]
          $[p$]If the ${.:.:.} is set for interrupt request on count completion (${.:XCNT_CUR} or
          ${.:YCNT_CUR} reach 0) and the peripheral issues a finish command, the ${.} issues an
          interrupt request after the finish procedure is complete.$[/p$]$[p$]For more information, see the
          sections on interrupt generation and peripheral control in the ${.} functional
          description.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} bit field selects whether an interrupt goes to the core based on
          work unit status or a peripheral interrupt request.$[/p$] $[p$]For one-dimensional mode,
          setting the ${.:.:.} bits to generate an interrupt when the ${.:YCOUNTCURR} register reaches
          0 causes the ${.} to flag a configuration error.$[/p$]$[p$]The peripheral interrupt
          setting lets the ${.} generate the last grant indication and to accept and or forward the
          peripheral interrupt command.$[/p$]$[p$] The peripheral interrupt selection applies only
          to the ${.:.:FLOW} bits set for stop and the ${.:.:WNR} bits set for memory read. $[/p$]
          $[p$]If the ${.:.:.} is set for interrupt on count completion (${.:XCOUNTCURR} or
          ${.:YCOUNTCURR} reach 0) and the peripheral issues a finish command, the ${.} issues an
          interrupt after the finish procedure is complete.$[/p$]$[p$]For more information see the
          sections on interrupt generation and peripheral control in the ${.} functional
          description.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>2</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_INT</Name>
            <UID>091f0b63d003eea9ac957c0849d87073</UID>
            <Description>Never assert Interrupt request</Description>
            <DocSets>
              <Set1>
                <Description>Never Assert Interrupt</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>00</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>XCNT_INT</Name>
            <UID>277bed697435217a1fae88268207dc2c</UID>
            <Description>Interrupt request when X Count Expires</Description>
            <DocSets>
              <Set1>
                <Description>Interrupt When X Count Expires</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>01</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>YCNT_INT</Name>
            <UID>82f80de2ed98cf872c9a9feb3e64b285</UID>
            <Description>Interrupt request when Y Count Expires</Description>
            <DocSets>
              <Set1>
                <Description>Interrupt When Y Count Expires</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>10</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PERIPH_INT</Name>
            <UID>26070811a073b83732f8c5db273b2b21</UID>
            <Description>Peripheral Interrupt request</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>11</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>IP_ID</Name>
        <UID>6f8058ce5d1832b4a551689827e0281548c720a3</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h80</DefaultValue>
        <Description>A unique identification value per IP</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>10</Width>
      </BitField>
      <BitField>
        <Name>IRQDONE</Name>
        <UID>599efce5d687baf986489b27a27b96e0</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit/Row Done Interrupt</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit indicates that the ${.} has detected the completion of a work unit or
          row (inner loop count) and has issued an interrupt request. Programs can use the ${.:.:.} status
          to help determine which ${.} asserted the interrupt request. Programs can also use these bits to
          help distinguish between an interrupt request based on the state of the work unit and an interrupt request
          made by the peripheral. For more information, see the interrupts section of the ${.}
          functional description.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} indicates the ${.} has detected the completion of a work unit or
          row (inner loop count) and has issued an interrupt. Programs can use the ${.:.:.} status
          to help determine which ${.} asserted the interrupt. Programs can also use these bits to
          help distinguish between an interrupt based on the state of the work unit and an interrupt
          made by the peripheral. For more information, see the interrupts section of the ${.}
          functional description.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>OneToClear</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_IRQ</Name>
            <UID>69a44975c4cb075161012ceea0e24c6a</UID>
            <Description>Inactive</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>IRQDONE</Name>
            <UID>558c0676c98d2f8f9b950733c922d849</UID>
            <Description>Active</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>IRQERR</Name>
        <UID>196f13b5a1181c41637de73dc41dfa2b</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Error Interrupt</Description>
        <DocSets>
          <Set1>
            <Description>Error Interrupt Request</Description>
            <Documentation>The ${.:.:.} bit indicates that the ${.} has detected a documented rule violation
          during DMA programming or operation. The ${.} cannot, however, flag all possible
          programming or operation issues to indicate errors. Programmers can use the ${.:.:.} bit to help
          determine which ${.} issued the error interrupt request. The ${.:.:.} does not clear a transition
          of the ${.:CFG:EN} bit from 0 to 1. Clear the ${.:.:.} bit with a write-1-to-clear operation
          prior to the ${.:CFG:EN} transition for the fields to be reset.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} indicates that the ${.} has detected a documented rule violation
          during DMA programming or operation. The ${.} cannot, however, flag all possible
          programming or operation issues to indicate errors. Programmers can use ${.:.:.} to help
          determine which ${.} issued the error interrupt. The ${.:.:.} does not clear a transition
          of the ${.:CONFIG:EN} bit from 0 to 1. Clear the ${.:.:.} with a write-1-to-clear operation
          prior to the ${.:CONFIG:EN} transition for the fields to be reset.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>OneToClear</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_IRQERR</Name>
            <UID>f9d832f9d8b93c8fb96708a353a84ce8</UID>
            <Description>No Error</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>IRQERR</Name>
            <UID>989bd0a64fe9f8ff83d21327ea10ba7c</UID>
            <Description>Error Occurred</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>MAJOR_REV</Name>
        <UID>64e9dae3af9eb4456729832c598450e9ab915122</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h2</DefaultValue>
        <Description>Revisioning to indicate major changes to IP</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>8</Width>
      </BitField>
      <BitField>
        <Name>MBWID</Name>
        <UID>3afb3ba4e34af0e4d56d8eacd4beb3be</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>=(MBWIDTH==2? 'h0 : (MBWIDTH==4? 'h1 : (MBWIDTH==8?'h2 :'h3)))</DefaultValue>
        <Description>Memory Bus Width</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field indicates the width of the memory bus connected to this
          ${.}.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} indicates the width of the memory bus connected to this
          ${.}.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>2</Width>
        <EnumElements>
          <EnumElement>
            <Name>MBUS02</Name>
            <UID>5496d711d03f27a5d80b456cb2d97d6b</UID>
            <Description>2 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>00</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MBUS04</Name>
            <UID>6b813c9a9e760e26f507df52dcce9c60</UID>
            <Description>4 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>01</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MBUS08</Name>
            <UID>6d9064e2cbc0f7bca789f39dc14b6f98</UID>
            <Description>8 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>10</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MBUS16</Name>
            <UID>6fd33b83c95be4e8966756c040688ebc</UID>
            <Description>16 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>11</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>MINOR_REV</Name>
        <UID>8974e6be89475e1175c8decb6feccbe2f07eb1ae</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h2</DefaultValue>
        <Description>Revisioning to indicate minor changes to IP</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>4</Width>
      </BitField>
      <BitField>
        <Name>MSIZE</Name>
        <UID>4c4d670872491f22513848c1ccfd0029</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h2</DefaultValue>
        <Description>Memory Transfer Word Size</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bits select memory transfer sizes of 8-, 16-, 32-, 64-, 128-, or
          256-bit words. The transfer start address (${.:ADDRSTART}) and transfer increment values
          (${.:XMOD}, and, if needed, ${.:YMOD}) must be a multiple of the memory transfer unit
          size.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} bits select memory transfer sizes of 8-, 16-, 32-, 64-, 128-, or
          256-bit words. The transfer start address (${.:ADDRSTART}) and transfer increment values
          (${.:XMODIFY}, and if needed ${.:YMODIFY}) must be a multiple of the memory transfer unit
          size.</Documentation>
        <Exists>=((EB_MDMA_RD == 'h1) || (EB_MDMA_WR == 'h1))</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes>For Enhanced BW MDMA (read and write channels), this field defaults to 3'b010. Also,
          the MSIZE01 and MSIZE02 enumerations are Reserved in this case.</Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Boolean</UIUIType>
        <UIWidget>CheckBox</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:isDuplicate=&quot;true&quot;; coda:pmode=&quot;field&quot;;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>MSIZE01</Name>
            <UID>fef1c6ba18ab7d40fbcb28ce6a0de4ad</UID>
            <Description>Reserved</Description>
            <DocSets>
              <Set1>
                <Description>1 Byte</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE02</Name>
            <UID>0c93c56f1b9d58966c4e7a84fe26cd14</UID>
            <Description>Reserved</Description>
            <DocSets>
              <Set1>
                <Description>2 Bytes</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE04</Name>
            <UID>b6250e93aa8207521049793bb95342de</UID>
            <Description>4 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE08</Name>
            <UID>cccb3c5770f8f7e83a3bd6d27a5d408b</UID>
            <Description>8 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE16</Name>
            <UID>713f98375f4e859a14d29b9c03098af0</UID>
            <Description>16 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE32</Name>
            <UID>d18d623381be6c95ec2c230e2852d790</UID>
            <Description>32 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>MSIZE</Name>
        <UID>db033c4acc46599f24cf0d49f83a50a9</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Memory Transfer Word Size</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bits select memory transfer sizes of 8-, 16-, 32-, 64-, 128-, or
          256-bit words. The transfer start address (${.:ADDRSTART}) and transfer increment values
          (${.:XMOD}, and, if needed, ${.:YMOD}) must be a multiple of the memory transfer unit
          size.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} bits select memory transfer sizes of 8-, 16-, 32-, 64-, 128-, or
          256-bit words. The transfer start address (${.:ADDRSTART}) and transfer increment values
          (${.:XMODIFY}, and if needed ${.:YMODIFY}) must be a multiple of the memory transfer unit
          size.</Documentation>
        <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>MSIZE01</Name>
            <UID>8eec19928efa0b568308c19b86cb80c3</UID>
            <Description>1 Byte</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE02</Name>
            <UID>ce82b077b895f794418e58384b941c27</UID>
            <Description>2 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE04</Name>
            <UID>f8a3c988755ef834b90c0c53ae4a4437</UID>
            <Description>4 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE08</Name>
            <UID>4074a8d255e034437c0019fadb80cf98</UID>
            <Description>8 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE16</Name>
            <UID>bfee295c2cfa3a0c0202c751fb815dd8</UID>
            <Description>16 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>MSIZE32</Name>
            <UID>8d71d5a164b278cf057e51cf8ff024cb</UID>
            <Description>32 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>NDSIZE</Name>
        <UID>44eb74efdaeb6138c619033121e9d0e3</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Next Descriptor Set Size</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field specifies the number of descriptor elements in memory
          to load during the next descriptor fetch. The ${.} loads the descriptors in a specific
          order. The descriptor set contains the next descriptor pointer when it is a descriptor list.
          The descriptor set does not contain the next descriptor pointer when it is a descriptor
          array.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} bit field specifies the number of descriptor elements in memory
          to load during the next descriptor fetch. The ${.} loads the descriptors in a specific
          order. The descriptor set contains the next descriptor pointer if it is a descriptor list.
          The descriptor set does not contain the next descriptor pointer if it is a descriptor
          array.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>FETCH01</Name>
            <UID>8634d3297a41d51b58ea2689faf3eda9</UID>
            <Description>Fetch one Descriptor Element</Description>
            <DocSets>
              <Set1>
                <Description>Fetch One Descriptor Element</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FETCH02</Name>
            <UID>8a18b33b5030a5956e84506501877c69</UID>
            <Description>Fetch two Descriptor Elements</Description>
            <DocSets>
              <Set1>
                <Description>Fetch Two Descriptor Elements</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FETCH03</Name>
            <UID>1262dd687cd4fc9a334af4516e7cdc58</UID>
            <Description>Fetch three Descriptor Elements</Description>
            <DocSets>
              <Set1>
                <Description>Fetch Three Descriptor Elements</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FETCH04</Name>
            <UID>38d07d33c38d2e82325bee5083eec9f6</UID>
            <Description>Fetch four Descriptor Elements</Description>
            <DocSets>
              <Set1>
                <Description>Fetch Four Descriptor Elements</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FETCH05</Name>
            <UID>697231f3244af9b6070ba87def58f100</UID>
            <Description>Fetch five Descriptor Elements</Description>
            <DocSets>
              <Set1>
                <Description>Fetch Five Descriptor Elements</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FETCH06</Name>
            <UID>ee4ab3f7f4a9e65055201781a9e14aba</UID>
            <Description>Fetch six Descriptor Elements</Description>
            <DocSets>
              <Set1>
                <Description>Fetch Six Descriptor Elements</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>FETCH07</Name>
            <UID>894ce482efade6510d7d7730efd91923</UID>
            <Description>Fetch seven Descriptor Elements</Description>
            <DocSets>
              <Set1>
                <Description>Fetch Seven Descriptor Elements</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>110</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>NDSIZE_NOUSE1</Name>
            <UID>fb80061e10a655ba5fb9774798e91e37</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>111</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>PBWID</Name>
        <UID>6f1283627a0320b4560992e134d7ca57</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>=(PBWIDTH==1? 'h0 : (PBWIDTH==2? 'h1 : (PBWIDTH==4?'h2 :'h3)))</DefaultValue>
        <Description>Peripheral Bus Width</Description>
        <Documentation>The ${.:.:.} bit field indicates the width of the peripheral bus connected to
          this ${.}.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>2</Width>
        <EnumElements>
          <EnumElement>
            <Name>PBUS01</Name>
            <UID>82f3c4f530cfa447ee5109cb35e8c4b8</UID>
            <Description>1 Byte</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>00</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PBUS02</Name>
            <UID>afb9883f037d31caf3c19622fd2c3b52</UID>
            <Description>2 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>01</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PBUS04</Name>
            <UID>30f3cf48289bb263f4da4351033976dc</UID>
            <Description>4 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>10</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PBUS08</Name>
            <UID>b1cad24d6513d16d37cb79847ba15111</UID>
            <Description>8 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>11</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>PDPO</Name>
        <UID>6cb4830a57826d2ef1626f490c24076f</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Previous Descriptor Pointer Overrun</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit signifies an alignment error. Due to aligned addressing
              combined with all descriptors being 32 bits in width, bits 0 and 1 of all descriptor
              pointers must be zero. Otherwise, an alignment error would occur when used for
              descriptor fetches.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>PDPO_NOERR_NOUSE1</Name>
            <UID>386e4e0d8129b0c43ba0520045bfd85cdde4e4a3</UID>
            <Description>No error occurred</Description>
            <DocSets>
              <Set1>
                <Description>No Error Occurred</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1'b0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PDPO_ERR_NOUSE2</Name>
            <UID>fc09a8ed8e68720951e769c30d516d097640f19f</UID>
            <Description>Error occurred</Description>
            <DocSets>
              <Set1>
                <Description>Error Occurred</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1'b1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>PDRF</Name>
        <UID>dcb71e8da48da32595af6d443dd54ed8</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Peripheral Data Request Forward</Description>
        <Documentation>The ${.:.:.} bit defines how the ${.} handles data requests from the
          peripheral while in idle state after a stop mode or memory read work unit. If set, the
          ${.} forwards the peripheral data request as an interrupt. $[/p$]$[p$]This bit applies
          only to the ${.:.:FLOW} bits configured for stop and ${.:.:WNR} bits configured for memory
          read.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>PDAT_NOTFWD</Name>
            <UID>9ded8d0b42cd523d82e55e3d06777274</UID>
            <Description>Peripheral Data Request Not Forwarded</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PDAT_FWD</Name>
            <UID>fac218a96161a33126e4ad3f9d78c8f9</UID>
            <Description>Peripheral Data Request Forwarded</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>PIRQ</Name>
        <UID>3591ee33bd99cff3b61e67abedc41207</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Peripheral Interrupt Request</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit indicates a peripheral interrupt request. Programs can use the
          ${.:.:.} bit status to help determine which ${.} asserted the interrupt request. This bit also
          helps to distinguish between an interrupt request caused by the state of the work unit and an
          interrupt request caused by the peripheral.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} bit indicates a peripheral interrupt. Programs can use the
          ${.:.:.} bit status to help determine which ${.} asserted the interrupt. This bit also
          helps to distinguish between an interrupt caused by the state of the work unit and an
          interrupt caused by the peripheral.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>OneToClear</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_PIRQ</Name>
            <UID>3ddee11abb1202f578d5b633137a2a51</UID>
            <Description>No Interrupt request</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PIRQ</Name>
            <UID>822c6a9c02d5fd69123eb90961eaf943</UID>
            <Description>Interrupt Request signaled by peripheral</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>PROG_REV_IF</Name>
        <UID>ce4826dbe0c30255a6473feace8236bd32f1d8b4</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>0</DefaultValue>
        <Description>Programming Model Interface Register</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>16</Width>
      </BitField>
      <BitField>
        <Name>PSIZE</Name>
        <UID>a14e978252fb6fabc40e3b9e74445b02</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h2</DefaultValue>
        <Description>Peripheral Transfer Word Size</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bits select peripheral transfer sizes as 8, 16, 32, or 64 bits
          wide. Each request and grant results in a single peripheral access. There are no bursts on
          the peripheral bus, so the ${.:.:.} selection must be less than or equal to the width of
          the bus. If the selection is greater than the bus width, a configuration error occurs. The
          peripheral bus of the processor is dedicated to ${.} and peripheral
          accesses.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} bits select peripheral transfer sizes as 8, 16, 32, or 64 bits
          wide. Each request and grant results in a single peripheral access. There are no bursts on
          the peripheral bus, so the ${.:.:.} selection must be less than, or equal to, the width of
          the bus. If the selection is greater than the bus width, a configuration error occurs. The
          peripheral bus of the processor is dedicated to ${.} and peripheral
          accesses.</Documentation>
        <Exists>=((EB_MDMA_RD == 'h1) || (EB_MDMA_WR == 'h1))</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes>For Enhanced BW MDMA (read and write channels), this field defaults to 3'b010. Also,
          the PSIZE01 and PSIZE02 enumerations are Reserved in this case.</Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Boolean</UIUIType>
        <UIWidget>CheckBox</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:isDuplicate=&quot;true&quot;; coda:pmode=&quot;field&quot;;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>PSIZE01</Name>
            <UID>00ced2fb319f39a1d64b9e04154d6cea</UID>
            <Description>Reserved</Description>
            <DocSets>
              <Set1>
                <Description>1 Byte</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PSIZE02</Name>
            <UID>afaf6cbc08c03740e9ca35e8af16d609</UID>
            <Description>Reserved</Description>
            <DocSets>
              <Set1>
                <Description>2 Bytes</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PSIZE04</Name>
            <UID>701a5c40d1cc99dbecbdf28e5db6381c</UID>
            <Description>4 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PSIZE08</Name>
            <UID>df12580f6cebdad67574c2d1f1b7d640</UID>
            <Description>8 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>PSIZE</Name>
        <UID>b586b3fdba786f00edea9268ce30b7fb</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Peripheral Transfer Word Size</Description>
        <Documentation>The ${.:.:.} bits select peripheral transfer sizes as 8, 16, 32, or 64 bits
          wide. Each request and grant results in a single peripheral access. There are no bursts on
          the peripheral bus, so the ${.:.:.} selection must be less than, or equal to, the width of
          the bus. If the selection is greater than the bus width, a configuration error occurs. The
          peripheral bus of the processor is dedicated to ${.} and peripheral
          accesses.</Documentation>
        <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>PSIZE01</Name>
            <UID>ef0d8c32c2cfc939f276e618cb91902e</UID>
            <Description>1 Byte</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PSIZE02</Name>
            <UID>142148e66a57ecc624b3d3a70a8e9a88</UID>
            <Description>2 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PSIZE04</Name>
            <UID>880aa190420734ea126c58164474e7e4</UID>
            <Description>4 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>PSIZE08</Name>
            <UID>b45aef7ef6b5e6543b2d74f2a9a0834c</UID>
            <Description>8 Bytes</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>RUN</Name>
        <UID>b8655241283b30570e9b1d4632815e8e</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Run Status</Description>
        <Documentation>The ${.:.:.} bit field reports the ${.}'s current operational state. If the
          ${.} is in idle or stop state, the ${.:CONFIG:EN} bit is either 0 or 1. This bit field does
          not clear when a transition of the ${.:CONFIG:EN} bit from 0 to 1 occurs. The ${.:.:.} clears
          automatically when the DMA completes.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>3</Width>
        <EnumElements>
          <EnumElement>
            <Name>STOPPED</Name>
            <UID>6b4377298b4fc8cdbd3e9eeeab68c0d1</UID>
            <Description>Idle/Stop State</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>000</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>DSCFETCH</Name>
            <UID>d8dadae952c283f361ccfc1ff37e4766</UID>
            <Description>Descriptor Fetch</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>001</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>DATAXFER</Name>
            <UID>2d2142c0b4fdc3ab7894a199e3f6e1e9</UID>
            <Description>Data Transfer</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>010</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>TRGWAIT</Name>
            <UID>f80cd9c7167a82b39d771c3df4490f29</UID>
            <Description>Waiting for Trigger</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>011</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>ACKWAIT</Name>
            <UID>7531803289acdfe3bf5c21554177c9b5</UID>
            <Description>Waiting for Write ACK/FIFO Drain to Peripheral</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>100</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>RUN_NOSUE1</Name>
            <UID>3b9d9af1608fb8a7bbb70a81fefcbf6f</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>101</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>RUN_NOUSE2</Name>
            <UID>399b78805611324792008387a6932bc5</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>110</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>RUN_NOUSE3</Name>
            <UID>36d459250a40b6054778f435713a9c22</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>111</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>SCHEMA_ID</Name>
        <UID>153aaf8d4b1bbb2221c15462e553c3f8fcfc54a8</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>0</DefaultValue>
        <Description>Provision for future enhancements. Currently, set to 0x0</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>2</Width>
      </BitField>
      <BitField>
        <Name>STATUS_TWAIT</Name>
        <UID>f22e9cd91482ab3202c443d264a2c877</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Trigger Wait Status</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit indicates whether the ${.} has or has not received a trigger.
          This bit is set until it reaches the next wait state. At that point, the bit is cleared,
          the ${.} stops processing that work unit, and the following work unit processes. The ${.}
          does not distinguish between one or more triggers received.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} indicates whether the ${.} has or has not received a trigger.
          This bit is set until it reaches the next wait state. At that point, the bit is cleared,
          the ${.} stops processing that work unit, and the following work unit processes. The ${.}
          does not distinguish between one or more triggers received.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NOTRIGRX</Name>
            <UID>71aa4914b675a3f1f7dec3ff6529c09d</UID>
            <Description>No trigger received</Description>
            <DocSets>
              <Set1>
                <Description>No Trigger Received</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>TRIGRX</Name>
            <UID>a95438eb753896e4929c2aaaccba9f55</UID>
            <Description>Trigger received</Description>
            <DocSets>
              <Set1>
                <Description>Trigger Received</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>SYNC</Name>
        <UID>e1a9852fb4084385cab38c40fcb573ae</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Synchronize Work Unit Transitions</Description>
        <Documentation>Setting the ${.:.:.} bit clears the DMA FIFO and pointers before starting the
          first work unit of a work unit chain.$[/p$]$[p$]When the transfer direction is memory
          read/transmit (${.:.:WNR} =0), the ${.} waits until all data transmits to a peripheral
          before moving on to the next work unit, clearing the FIFO and pointers.$[/p$]$[p$]When the
          transfer direction is memory write/receive (${.:.:WNR} =1), the ${.} ignores the ${.:.:.}
          bit value after processing the first work unit of a work unit chain. As a channel can
          receive data when turned on but idle, data from the peripheral can still be in the FIFO
          even though the channel was not programmed. When the ${.:.:.} bit field is set at the
          beginning of a work unit chain (during the first work unit), the ${.} clears the FIFO,
          erasing the data put into the FIFO while the channel was idle.$[/p$]$[p$]Syncing lets
          programs change the ${.:.:PSIZE} between individual work units and (in some cases) work
          unit chains. The sync resets the pointers in the FIFO, preventing misaligned FIFO
          access.$[/p$]$[p$]Programs can change the ${.:.:MSIZE} field between consecutive work
          units, independent of the ${.:.:.} bit setting. $[/p$]$[p$]Syncing also permits changes to
          transfer direction. Because the data in the FIFO is eliminated, the data that went into
          the FIFO from one direction (transmit or receive) is not sent back in the other direction
          after the direction change.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_SYNC</Name>
            <UID>6795c771980ad5633a7a527f63206d20</UID>
            <Description>No Synchronization</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>SYNC</Name>
            <UID>f5517f3012f39a9796051cfaf03dac3f</UID>
            <Description>Synchronize Channel</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>TOVEN</Name>
        <UID>b4d4fec4afb260888ed19167c91024eb</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Trigger Overrun Error Enable</Description>
        <Documentation>A trigger overrun occurs if more than one trigger was received before the
          ${.} reached the trigger wait state. If ${.:.:.} is set, a trigger overrun causes the ${.}
          to flag an error. In cases where a trigger overrun is not a problem, clearing ${.:.:.}
          prevents the overrun from causing an error and halting the ${.}. The ${.:.:.} operates
          independently of the ${.:.:CONFIG_TWAIT} bit selection.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>TOV_DIS</Name>
            <UID>4d84b97bb76a86ca8234db5c13234ca6</UID>
            <Description>Ignore Trigger Overrun</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>TOV_EN</Name>
            <UID>a5f43e7f936b9882ad7e1d06bb6e27aa</UID>
            <Description>Error on Trigger Overrun</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>TRIG</Name>
        <UID>6261dba0b9eb19c9603c71710fb35d63</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Generate Outgoing Trigger</Description>
        <Documentation>The ${.:.:.} selects whether the ${.} issues an outgoing trigger, based on
          the work unit counter values. In one-dimensional mode, the only options are to trigger at
          the end of the whole work unit (trigger when ${.:XCOUNTCURR} reaches 0) or not to trigger at
          all. If in one-dimensional addressing mode, programming the ${.:.:.} bit field to trigger
          when ${.:YCOUNTCURR} reaches 0 (or to reserved) causes the ${.} to flag a configuration
          error. $[/p$]$[p$]In two-dimensional addressing mode, the trigger options are: at the end
          of each row of the inner loop (when ${.:XCOUNTCURR} reaches 0), only after completing the
          whole work unit (when ${.:YCOUNTCURR} reaches 0), or no trigger. If in two-dimensional mode
          and set to trigger when ${.:XCOUNTCURR} reaches 0, the ${.} also issues a trigger at the end
          of the work unit. If in two-dimensional addressing mode, programming ${.:.:.} to reserved
          causes the ${.} to flag a configuration error.$[/p$]$[p$]If ${.:.:.} is non-zero and the
          peripheral issues a finish command, the ${.} issues a trigger after the finish procedure
          is complete.$[/p$]$[p$]For more information about trigger generation timing, see the
          trigger section of the ${.} functional description.</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>2</Width>
        <EnumElements>
          <EnumElement>
            <Name>NO_TRIG</Name>
            <UID>8921838db6dafe1f827edb26c5c0aa4a</UID>
            <Description>Never assert Trigger</Description>
            <DocSets>
              <Set1>
                <Description>Never Assert Trigger</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>00</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>XCNT_TRIG</Name>
            <UID>3418a2c100ab3de35a4c786b0ca9bcb2</UID>
            <Description>Trigger when XCNTCUR reaches 0</Description>
            <DocSets>
              <Set1>
                <Description>Trigger When XCNTCUR Reaches 0</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>01</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>YCNT_TRIG</Name>
            <UID>e7958f3612bc1a1a27c5c6c51ffd2ea5</UID>
            <Description>Trigger when YCNTCUR reaches 0</Description>
            <DocSets>
              <Set1>
                <Description>Trigger When YCNTCUR Reaches 0</Description>
              </Set1>
            </DocSets>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>10</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>TRIG_NOUSE1</Name>
            <UID>1271bf7322c17accaf5cf489c5002a6c</UID>
            <Description>Reserved</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>11</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>TRIVIAL_REV</Name>
        <UID>55881ad7f1a0e81125729ea17423598877236e18</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h2</DefaultValue>
        <Description>Revisioning to indicate trivial changes to IP</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>sub_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>=__AUTO__</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User></User>
        <Width>4</Width>
      </BitField>
      <BitField>
        <Name>TWOD</Name>
        <UID>de5559e1253839e33bb3b4584f64bc7e</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Two Dimension Addressing Enable</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit selects whether the DMA addressing involves only ${.:XCNT} and
          ${.:XMOD} (one-dimensional DMA) or also involves ${.:YCNT} and ${.:YMOD} (two-dimensional
          DMA).</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} selects whether the DMA addressing involves only ${.:XCOUNT} and
          ${.:XMODIFY} (one-dimensional DMA) or also involves ${.:YCOUNT} and ${.:YMODIFY} (two-dimensional
          DMA).</Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>ADDR1D</Name>
            <UID>fa156b52f41a073b24ebf7f2122fc174</UID>
            <Description>One-Dimensional Addressing</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>ADDR2D</Name>
            <UID>2a2a7791ecddfa1aca495e3d000d140d</UID>
            <Description>Two-Dimensional Addressing</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>WNR</Name>
        <UID>03b4ba683b87faf2da7643f8d235fce5</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Write/Read Channel Direction</Description>
        <Documentation>The ${.:.:.} selects receive (write to memory) or transmit (read from memory)
          channel direction.</Documentation>
        <Exists>=(EB_MDMA_RD == 'h1)</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes>For Enhanced BW MDMA, this bit is read-only and controls the Read channel.</Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Boolean</UIUIType>
        <UIWidget>CheckBox</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:isDuplicate=&quot;true&quot;; coda:pmode=&quot;field&quot;;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>READ</Name>
            <UID>e03847fe36cf110f921993771a5231ec</UID>
            <Description>Transmit (Read from memory)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>WRITE</Name>
            <UID>e191712fb413d94fea47f8b5f65de1af</UID>
            <Description>Receive (Write to memory)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>WNR</Name>
        <UID>071dec07bf17f45d1ab9b0f94ad4e936</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Write/Read Channel Direction</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit selects receive (write to memory) or transmit (read from memory)
          channel direction.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} selects receive (write to memory) or transmit (read from memory)
          channel direction.</Documentation>
        <Exists>=((EB_MDMA_RD == 'h0) &amp;&amp; (EB_MDMA_WR == 'h0))</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Enumeration</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>READ</Name>
            <UID>13a66cb77330c19313e26c46c65ca163</UID>
            <Description>Transmit (Read from memory)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>WRITE</Name>
            <UID>092df7261bb567b62234d9653edf9ad2</UID>
            <Description>Receive (Write to memory)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>WNR</Name>
        <UID>7cb2e1c50653634e7a02d25bdcb9a94a</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h1</DefaultValue>
        <Description>Write/Read Channel Direction</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit selects receive (write to memory) or transmit (read from memory)
          channel direction.</Documentation>
          </Set1>
        </DocSets>
        <Documentation>The ${.:.:.} selects receive (write to memory) or transmit (read from memory)
          channel direction.</Documentation>
        <Exists>=(EB_MDMA_WR == 'h1)</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes>For Enhanced BW MDMA, this bit is read-only and controls the Write channel.</Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Boolean</UIUIType>
        <UIWidget>CheckBox</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:isDuplicate=&quot;true&quot;; coda:pmode=&quot;field&quot;;</User>
        <Width>1</Width>
        <EnumElements>
          <EnumElement>
            <Name>READ</Name>
            <UID>e4a56bd59a8d8c6118067f5452dc7321</UID>
            <Description>Transmit (Read from memory)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>0</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
          <EnumElement>
            <Name>WRITE</Name>
            <UID>34d5e616d64b50f866d5c1fd6c741659</UID>
            <Description>Receive (Write to memory)</Description>
            <Documentation></Documentation>
            <Exists>True</Exists>
            <Notes></Notes>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIValue></UIUIValue>
            <User></User>
            <Value>1</Value>
            <Visibility>Public</Visibility>
          </EnumElement>
        </EnumElements>
      </BitField>
      <BitField>
        <Name>XCOUNT</Name>
        <UID>ce66547ca3e9e833d8a5b4d400c2141a</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit Inner Loop Counter Start Value</Description>
        <DocSets>
          <Set1>
            <Documentation>For 2D DMA, the ${.:.:.} bit field contains the inner loop count. For 1D
              DMA, ${.:.:.} specifies the number of ${.:CFG:MSIZE} size data transfers for the
              entire work unit.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>XCOUNTCURR</Name>
        <UID>fe7bb37454a934818cc37cc546ec5295</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit outer loop counter-start value</Description>
        <DocSets>
          <Set1>
            <Description>Work Unit Outer Loop Counter Start Value</Description>
            <Documentation>For 1D DMA, the ${.:.:.} bit field holds the ${.:XCNT} value at the
              beginning of each work unit. For 2D DMA, the ${.:.:.} bit field holds the ${.:XCNT}
              value after the end of each row.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>XMODIFY</Name>
        <UID>735a1d6a99aa1645e9f131c44cecf304</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Inner Loop Address Increment in Bytes</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains a signed, two's-complement byte address
              increment.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Signed</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>YCOUNT</Name>
        <UID>74528bc4c8f1c671906ff114190e95bf</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit Inner Loop Counter Current Value</Description>
        <DocSets>
          <Set1>
            <Documentation>For 2D DMA, the ${.:.:.} bit field contains the outer loop
              count.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>YCOUNTCURR</Name>
        <UID>67f98acc7d3513c705173f182d89c0cf</UID>
        <Access>R</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Work Unit outer loop counter current value</Description>
        <DocSets>
          <Set1>
            <Description>Work Unit Outer Loop Counter Current Value</Description>
            <Documentation>For 2D DMA, the ${.:.:.} bit field holds the value from the ${.:YCNT}
              register at the beginning of each 2D DMA session.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>True</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Unsigned</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
      <BitField>
        <Name>YMODIFY</Name>
        <UID>a7dc3514dbd1e740c568a89657a1de43</UID>
        <Access>R/W</Access>
        <Bundle></Bundle>
        <DefaultValue>'h0</DefaultValue>
        <Description>Outer Loop Address Increment in Bytes</Description>
        <DocSets>
          <Set1>
            <Documentation>The ${.:.:.} bit field contains a signed, two's-complement
              value.</Documentation>
          </Set1>
        </DocSets>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <HSType>Both</HSType>
        <ReadSideEffect>None</ReadSideEffect>
        <WriteSideEffect>None</WriteSideEffect>
        <DefaultType>HardWired</DefaultType>
        <ClockSignal>clk</ClockSignal>
        <ResetType>ASync</ResetType>
        <ResetSignal>=__AUTO__</ResetSignal>
        <Visibility>Public</Visibility>
        <ReadEnableSignal></ReadEnableSignal>
        <WriteEnableSignal></WriteEnableSignal>
        <ReadStrobe>None</ReadStrobe>
        <WriteStrobe>None</WriteStrobe>
        <LatchSignal></LatchSignal>
        <InputSideEffect>None</InputSideEffect>
        <OutputSideEffect>None</OutputSideEffect>
        <Volatile>False</Volatile>
        <RequiresCustomRTL>False</RequiresCustomRTL>
        <Testable>True</Testable>
        <ForcedValue></ForcedValue>
        <ForcedValueSignal></ForcedValueSignal>
        <LinkSet></LinkSet>
        <MSEnabled>False</MSEnabled>
        <MSTransferSignal>transfer</MSTransferSignal>
        <MSReadSelectSignal>read_select</MSReadSelectSignal>
        <MSSubClockSignal>slave_clk</MSSubClockSignal>
        <MSSubLogic>Included</MSSubLogic>
        <Notes></Notes>
        <PageMask></PageMask>
        <PhaseMask></PhaseMask>
        <UINotes></UINotes>
        <UIToolTip>=__AUTO__</UIToolTip>
        <UIUIType>Range</UIUIType>
        <UIWidget>None</UIWidget>
        <UINumericBase>Decimal</UINumericBase>
        <UIDataFormat>Signed</UIDataFormat>
        <UIPrefix>None</UIPrefix>
        <UIUnits>None</UIUnits>
        <UIScale>1</UIScale>
        <UIOffset>0</UIOffset>
        <UIMinValue>=__AUTO__</UIMinValue>
        <UIMaxValue>=__AUTO__</UIMaxValue>
        <UIIncrement>1</UIIncrement>
        <UIPolarity>ActiveHigh</UIPolarity>
        <User>coda:pmode=&quot;field&quot;</User>
        <Width>32</Width>
      </BitField>
    </BitFields>
    <RegisterMaps>
      <UID>377323736c89f9319cc16a445d26a9f593b1ba96</UID>
      <RegisterMap>
        <Name>RegMap1</Name>
        <UID>90a0320b205bb9d16fc30aff4678072f</UID>
        <Address>'h0000</Address>
        <Description>Some description.</Description>
        <Documentation></Documentation>
        <Exists>True</Exists>
        <Notes></Notes>
        <User></User>
        <Registers>
          <Register>
            <Name>DESCPNEXT</Name>
            <UID>991d84cd7df5919a5e6fb02200823b86</UID>
            <Address>'h0</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Pointer to Next Initial Descriptor</Description>
            <DocSets>
              <Set1>
                <Description>Pointer to Next Initial Descriptor Register</Description>
                <Documentation>The ${.:.} register specifies the start location of the next
                  descriptor set, which begins when the DMA activity specified by the current
                  descriptor set completes. This register is read/write prior to enabling the
                  channel, but is read-only after enabling channel. $[/p$] $[p$]The ${.:.} register
                  is only used in descriptor list mode. At the start of a descriptor fetch in this
                  mode, the ${.:.} register is copied into the ${.:DSCPTR_CUR} register. During
                  descriptor fetch, the ${.} increments the ${.:DSCPTR_CUR} register value after
                  reading each element of the descriptor set.$[/p$] $[p$]In descriptor list mode,
                  the ${.:.} register (not the ${.:DSCPTR_CUR} register) must be programmed directly
                  through MMR access, before the DMA operation is started. In descriptor array mode,
                  the ${.} disregards the ${.:.} register and uses the ${.:DSCPTR_CUR} register to
                  control descriptor fetch.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register specifies the start location of the next descriptor
              set, which begins when the DMA activity specified by the current descriptor set
              completes. This register is read/write prior to enabling the channel, but is read-only
              after enabling channel. $[/p$] $[p$]Use the ${.:.} register only in descriptor list
              mode. At the start of a descriptor fetch in this mode, the ${.:.} register contents
              are copied into the ${.:DESCPCURR} register. During descriptor fetch, the ${.}
              increments the ${.:DESCPCURR} register value after reading each element of the
              descriptor set.$[/p$] $[p$]In descriptor list mode, program this register (not the
              ${.:DESCPCURR} register) directly through MMR access, before the DMA operation
              starts. In descriptor array mode, the ${.} disregards the ${.:.} register and uses the
              ${.:DESCPCURR} register to control descriptor fetch.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;POINTER&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>3fe732dfb155d0ed082eef5da72a2b15</BF-UID>	<!-- Name: DESCPNEXT -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>8c9adfb21c3102a9db801828e24ca24e</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>ADDRSTART</Name>
            <UID>9924012b6ab7341c75befd5a16a93b8a</UID>
            <Address>'h4</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Start Address of Current Buffer</Description>
            <DocSets>
              <Set1>
                <Description>Start Address of Current Buffer Register</Description>
                <Documentation>The ${.:.} register contains the start address of the work unit
                  currently targeted for DMA. This register is read/write prior to enabling the
                  channel, but is read-only after enabling channel.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains the start address of the Work Unit currently
              targeted for DMA. This register is read/write prior to enabling the channel, but is
              read-only after enabling channel.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;POINTER&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>43f2ea804a7dc47e90b803ba8fd14609</BF-UID>	<!-- Name: ADDRSTART -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>95128ec4b742005fd477579d4ddacac3</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>CONFIG</Name>
            <UID>1cf5a7861675c389248a2d3b416539df</UID>
            <Address>'h8</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Configuration Register</Description>
            <DocSets>
              <Set1>
                <Documentation>The ${.:.} register sets up DMA parameters and operation modes. Writing to the ${.:.} register while a DMA process is
                  already running causes a DMA error (except when clearing the  ${.:.:EN} bit).</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register sets up DMA parameters and operation modes. Other
              than clearing the ${.:.:EN} bit, writing to the ${.:.} register during an active DMA
              causes a DMA error.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>1d28efe748d73ee3942db2a6bca072e0</BF-UID>	<!-- Name: EN -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>8e42f9fcb5f3da77dd98d45985efea4e</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>071dec07bf17f45d1ab9b0f94ad4e936</BF-UID>	<!-- Name: WNR -->
                <BitOffset>0</BitOffset>
                <RegOffset>1</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>58d2f39d9a4e35daa70788290d740501</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>7cb2e1c50653634e7a02d25bdcb9a94a</BF-UID>	<!-- Name: WNR -->
                <BitOffset>0</BitOffset>
                <RegOffset>1</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>5c757817180a91b9b80b0ded4ac87ef9</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>03b4ba683b87faf2da7643f8d235fce5</BF-UID>	<!-- Name: WNR -->
                <BitOffset>0</BitOffset>
                <RegOffset>1</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>99e8a374e4015c1f97bc3c163e2d9d27</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>e1a9852fb4084385cab38c40fcb573ae</BF-UID>	<!-- Name: SYNC -->
                <BitOffset>0</BitOffset>
                <RegOffset>2</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>becadfbff6121a2678aadb08e322be27</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>62eab160bca1e76192a959bc708f47f6</BF-UID>	<!-- Name: CADDR -->
                <BitOffset>0</BitOffset>
                <RegOffset>3</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>eea147608b89fac8d71dcd009063b20a</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>b586b3fdba786f00edea9268ce30b7fb</BF-UID>	<!-- Name: PSIZE -->
                <BitOffset>0</BitOffset>
                <RegOffset>4</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>568819a006cf377419606d3e7c1e229e</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>a14e978252fb6fabc40e3b9e74445b02</BF-UID>	<!-- Name: PSIZE -->
                <BitOffset>0</BitOffset>
                <RegOffset>4</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>b9d09822fc3709e0009ff13eef838dcf</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>db033c4acc46599f24cf0d49f83a50a9</BF-UID>	<!-- Name: MSIZE -->
                <BitOffset>0</BitOffset>
                <RegOffset>8</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>5499c5e7417074733342198611ad5634</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>4c4d670872491f22513848c1ccfd0029</BF-UID>	<!-- Name: MSIZE -->
                <BitOffset>0</BitOffset>
                <RegOffset>8</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>7c83d766eff0d0d633cfe220c97d5554</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>db6100adedc5b23e4fd77b45b94e5890</BF-UID>	<!-- Name: FLOW -->
                <BitOffset>0</BitOffset>
                <RegOffset>12</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>05d3a9ee8b89e2d17d1ea0c826282596</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>d7b0f697191907423d92b9316126fecf</BF-UID>	<!-- Name: CONFIG_TWAIT -->
                <BitOffset>0</BitOffset>
                <RegOffset>15</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>3f60685f987d9b7700369fd12909c508</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>44eb74efdaeb6138c619033121e9d0e3</BF-UID>	<!-- Name: NDSIZE -->
                <BitOffset>0</BitOffset>
                <RegOffset>16</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>8d3edcd3eaf980940b40c73dc1182d90</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>38f1520d29caac964cdfa78cfa118e39</BF-UID>	<!-- Name: INT -->
                <BitOffset>0</BitOffset>
                <RegOffset>20</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>2</SliceWidth>
                <UID>c0d4c293301f8b66f288cd8056050182</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>6261dba0b9eb19c9603c71710fb35d63</BF-UID>	<!-- Name: TRIG -->
                <BitOffset>0</BitOffset>
                <RegOffset>22</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>2</SliceWidth>
                <UID>6aee0976b8725cd79b32299a8f8d797b</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>b4d4fec4afb260888ed19167c91024eb</BF-UID>	<!-- Name: TOVEN -->
                <BitOffset>0</BitOffset>
                <RegOffset>24</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>da51ea37cc228a5b7537f848460a208a</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>60dee20023bbd2e2fa32e7a4f2ed3be9</BF-UID>	<!-- Name: DESCIDCPY -->
                <BitOffset>0</BitOffset>
                <RegOffset>25</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>9ca1fd79d6b2cf6c92a4ace65c6fe752</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>de5559e1253839e33bb3b4584f64bc7e</BF-UID>	<!-- Name: TWOD -->
                <BitOffset>0</BitOffset>
                <RegOffset>26</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>0ee2d38e39b308a37f03962c66110f4c</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>dcb71e8da48da32595af6d443dd54ed8</BF-UID>	<!-- Name: PDRF -->
                <BitOffset>0</BitOffset>
                <RegOffset>28</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>647d9bac0630caa3df119e81e4676fdc</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>75478580f59a7e2c218fac7c474c865b</BF-UID>	<!-- Name: DBURST -->
                <BitOffset>0</BitOffset>
                <RegOffset>30</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>9b0d0fd6a240325f91520fbc1871de60</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>afbbc9abbaa7fb682e5ce3e34f8b8867</BF-UID>	<!-- Name: HSDA -->
                <BitOffset>0</BitOffset>
                <RegOffset>31</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>3ff1aff88bff450efd63ea83170a6811</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>XCOUNT</Name>
            <UID>e5b3f471d01fd5e7b50b01b43a36528c</UID>
            <Address>'hc</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Inner Loop Count Start Value</Description>
            <DocSets>
              <Set1>
                <Name>xcount</Name>
                <Description>Inner Loop Count Start Value Register</Description>
                <Documentation>For 2D DMA, the ${.:.} register contains the inner loop count. This value
                  selects the number of ${.:CFG:MSIZE} size data transfers that make up the length of
                  a row. For 1D DMA, the ${.:.} register specifies the number of ${.:CFG:MSIZE} size data
                  transfers for the entire work unit. The ${.:.} register is read/write prior to
                  enabling the channel, but is read-only after enabling channel. Note that the ${.}
                  generates a configuration error if this register is 0x0 when a work unit
                  begins.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>For 2D DMA, the ${.:.} contains the inner loop count. This value selects
              the number of ${.:CONFIG:MSIZE} size data transfers to make up the length of a row. For
              1D DMA, ${.:.} specifies the number of ${.:CONFIG:MSIZE} size data transfers for the
              entire work unit. The ${.:.} register is read/write prior to enabling the channel, but
              is read-only after enabling channel. If ${.:.} is 0x0 when a work unit begins, the
              ${.} generates a configuration error.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>ce66547ca3e9e833d8a5b4d400c2141a</BF-UID>	<!-- Name: XCOUNT -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>92ac9fda6d45cc89c7da3f3d411f4e4a</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>XMODIFY</Name>
            <UID>28cf6e518611539ba99591818607bc4e</UID>
            <Address>'h10</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Inner Loop Address Increment</Description>
            <DocSets>
              <Set1>
                <Description>Inner Loop Address Increment Register</Description>
                <Documentation>The ${.:.} register contains a signed, two's-complement byte address
                  increment. In 1D DMA, this increment is the stride that is applied after each
                  ${.:CFG:MSIZE} size data transfer. The ${.:.} register is read/write prior to
                  enabling the channel, but is read-only after enabling the channel.$[/p$] $[p$]The
                  ${.:.} register value is specified in bytes, regardless of the work unit size. In 2D DMA,
                  this increment is applied after each ${.:CFG:MSIZE} size data transfer in the
                  inner loop, up to but not including the last ${.:CFG:MSIZE} size data transfer in
                  each inner loop. After the last ${.:CFG:MSIZE} size data transfer in each inner
                  loop, the ${.:YMOD} register is applied instead, including the last ${.:CFG:MSIZE}
                  size data transfer of a work unit. $[/p$] $[p$]The ${.:.} field can be set to 0.
                  In this case, DMA is performed repeatedly to or from the same address. This
                  approach can be useful for transferring data between a data register and an
                  external memory-mapped peripheral.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} contains a signed, two's-complement byte address increment. In
              1D DMA, this increment is the stride that is applied after each ${.:CONFIG:MSIZE} size
              data transfer. The ${.:.} register is read/write prior to enabling the channel, but is
              read-only after enabling channel.$[/p$] $[p$]The ${.:.} value is in bytes, regardless
              of the work unit size. For 2D DMA, this increment is applied after each ${.:CONFIG:MSIZE}
              size data transfer in the inner loop. This value is up to but not including the last
              ${.:CONFIG:MSIZE} size data transfer in each inner loop. After the last ${.:CONFIG:MSIZE}
              size data transfer in each inner loop, the ${.:YMODIFY} register is applied instead,
              including the last ${.:CONFIG:MSIZE} size data transfer of a work unit. $[/p$] $[p$]When
              the ${.:.} field is 0, DMA runs repeatedly to or from the same address. This approach
              is useful for transferring data between a data register and an external memory-mapped
              peripheral.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;SIGNED&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>735a1d6a99aa1645e9f131c44cecf304</BF-UID>	<!-- Name: XMODIFY -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>af038520cb12dd3dcb3faaa9b085c2b0</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>YCOUNT</Name>
            <UID>778126bede15e70afbe71f9234a86128</UID>
            <Address>'h14</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Outer Loop Count Start Value (2D only)</Description>
            <DocSets>
              <Set1>
                <Description>Outer Loop Count Start Value (2D only) Register</Description>
                <Documentation>For 2D DMA, the ${.:.} register contains the outer loop count. This register
                  is not used in 1D DMA mode. The ${.:.} register specifies the number of rows in
                  the outer loop of a 2D DMA sequence. The ${.:.} register is read/write prior to
                  enabling the channel, but is read-only after enabling channel. Note that the ${.}
                  generates a configuration error if this register is 0x0 when a work unit
                  begins.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>For 2D DMA, the ${.:.} register contains the outer loop count. This
              register is not used in 1D DMA mode. The ${.:.} register specifies the number of rows
              in the outer loop of a 2D DMA sequence. The ${.:.} register is read/write prior to
              enabling the channel, but is read-only after enabling channel. If the ${.:.} register
              = 0x0 when a work unit begins, the ${.} generates a configuration
              error.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>74528bc4c8f1c671906ff114190e95bf</BF-UID>	<!-- Name: YCOUNT -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>3891e4c3100021685d3a7a1f54260b58</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>YMODIFY</Name>
            <UID>004f9cbf36f3859985080b5665331a47</UID>
            <Address>'h18</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Outer Loop Address Increment (2D only)</Description>
            <DocSets>
              <Set1>
                <Description>Outer Loop Address Increment (2D only) Register</Description>
                <Documentation>The ${.:.} register contains a signed, two's-complement value. This byte
                  address increment is applied after each decrement of the ${.:YCNT_CUR} register.
                  The value is the offset between the last word of one row and the first word of the
                  next row. Note that ${.:.} is specified in bytes, regardless of the work unit
                  size. The ${.:.} register is read/write prior to enabling the channel, but is
                  read-only after enabling the channel.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains a signed, two's-complement value. This byte
              address increment is applied after each decrement of the ${.:YCOUNTCURR} register. The
              value is the offset between the last word of one row and the first word of the next
              row. The ${.:.} value is a byte value, regardless of the work unit size. The ${.:.}
              register is read/write prior to enabling the channel, but is read-only after enabling
              channel.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;SIGNED&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>a7dc3514dbd1e740c568a89657a1de43</BF-UID>	<!-- Name: YMODIFY -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>d2e339122b51651e38864eb6b659f1df</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>DESCPCURR</Name>
            <UID>e07cea76cfaa8e5d6b6aea3f41f4205d</UID>
            <Address>'h24</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Current Descriptor Pointer</Description>
            <DocSets>
              <Set1>
                <Description>Current Descriptor Pointer Register</Description>
                <Documentation>The ${.:.} register contains the memory address for the next descriptor to be
                  loaded. The ${.:.} register is read/write prior to enabling the channel, but is
                  read-only after enabling the channel. For ${.:CFG:FLOW} mode settings that involve
                  descriptor fetches, this register is used to read descriptors into appropriate
                  MMRs before a work unit begins. For descriptor list mode, the ${.:.} register is
                  initialized from the ${.:DSCPTR_NXT} register before fetching each descriptor set.
                  Then, the address in the ${.:.} register increments as each descriptor is
                  read.$[/p$] $[p$]When the entire descriptor set has been read, the ${.:.} register
                  contains this value:$[/p$] $[p$]${.:.} = Descriptor Start Address + Descriptor
                  Size (# of elements)$[/p$] $[p$]For descriptor array mode, the ${.:.} register,
                  and not the ${.:DSCPTR_NXT} register, must be programmed by a MMR access before
                  starting DMA operation.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains the memory address for the next descriptor.
              The ${.:.} register is read/write prior to enabling the channel, but is read-only
              after enabling channel. When the mode settings in ${.:CONFIG:FLOW} bit field involve
              descriptor fetches, this register reads descriptors into appropriate MMRs before a
              work unit begins. For descriptor list mode, the ${.:.} register is initialized from
              the ${.:DESCPNEXT} register before fetching each descriptor set. Then, the address in
              the ${.:.} register increments as each descriptor is read. $[/p$]$[p$]After reading
              the entire descriptor set, the ${.:.} register contains the following value:$[/p$]
              $[p$]${.:.} = Descriptor Start Address + Descriptor Size (# of elements)$[/p$]
              $[p$]For descriptor array mode, program the ${.:.} register (not the ${.:DESCPNEXT}
              register), using a MMR access before starting DMA operation.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;POINTER&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>92694c7c859ded7c7f871661638dda17</BF-UID>	<!-- Name: DESCPCURR -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>8b8cc0b398b57f1dcfe0361785db5fd9</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>DESCPPREV</Name>
            <UID>b0f77f3fc00c07e2142a122e49d01ec0</UID>
            <Address>'h28</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Previous Initial Descriptor Pointer</Description>
            <DocSets>
              <Set1>
                <Description>Previous Initial Descriptor Pointer Register</Description>
                <Documentation>The ${.:.} register contains the initial descriptor pointer for the previous
                  work unit. If ${.:CFG:DESCIDCPY}is set, the ${.} copies the initial descriptor
                  pointer to ${.:.} after the work unit completes. Otherwise, the value is not
                  updated.$[/p$] $[p$]To indicate an overrun, bit 0 of the ${.:.} register is used
                  as a previous descriptor pointer overrun (PDPO) status bit. Due to aligned
                  addressing combined with all descriptors being 32 bits in width, bits 0 and 1 of
                  all descriptor pointers must be zero. Otherwise, an alignment error occurs when
                  used for descriptor fetches. As a result, bit 1 and 0 of the ${.:.} register can be used for
                  status. For more information, see the section on descriptor pointer capture in the
                  ${.} functional description.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains the initial descriptor pointer for the
              previous work unit. If the ${.:CONFIG:DESCIDCPY} bit is set, the ${.} copies the initial
              descriptor pointer to the ${.:.} register after the work unit completes. Otherwise,
              the value is not updated. $[/p$]$[p$]This register uses bit 0 as a previous descriptor
              pointer overrun (PDPO) status bit to indicate an overrun. Due to aligned addressing
              combined with all descriptors being 32 bits in width, bits 0 and 1 of all descriptor
              pointers must be zero. Otherwise, when these bits are used for descriptor fetches, an
              alignment error occurs. As a result, bits 1 and 0 of the ${.:.} register can be used
              for status. For more information, see the section on descriptor pointer capture in the
              ${.} functional description.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;POINTER&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>6cb4830a57826d2ef1626f490c24076f</BF-UID>	<!-- Name: PDPO -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>40e8b978177715cd0e8ffefa74b66a08</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>f3e484d584b3ec1f3f98d4e7245afed3</BF-UID>	<!-- Name: DESCPPREV -->
                <BitOffset>0</BitOffset>
                <RegOffset>2</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>30</SliceWidth>
                <UID>cda44413300bb10089cf8899ba66d6d2</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>ADDRCURR</Name>
            <UID>db3926611823eede7c5b960f7f4f0416</UID>
            <Address>'h2c</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Current Address</Description>
            <DocSets>
              <Set1>
                <Description>Current Address Register</Description>
                <Documentation>The ${.:.} register contains the present memory transfer address for a given
                  work unit. At the start of a work unit, the ${.:.} register is loaded from the
                  ${.:ADDRSTART} register, and the ${.:.} register is incremented as each transfer
                  occurs. The ${.:.} register is read/write prior to enabling the channel, but is
                  read-only after enabling the channel.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains the address of the present memory transfer
              for a given work unit. At the start of a work unit, the ${.:.} register loads the
              value in the ${.:ADDRSTART} register, and the ${.:.} register value increments as each
              transfer occurs. The ${.:.} register is read/write prior to enabling the DMA channel,
              but is read-only after enabling channel.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:cdef-type=&quot;POINTER&quot;;
              coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>2fffa2b694fad547e18dd05a055a1f2a</BF-UID>	<!-- Name: ADDRCURR -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>a0f08b1fb54e0a12a001c712fab7ffd6</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>STATUS</Name>
            <UID>0efc7873c3e14023e87f9f33273788cb</UID>
            <Address>'h30</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Status Register</Description>
            <DocSets>
              <Set1>
                <Description>Status Register</Description>
                <Documentation>The ${.:.} register indicates the status of DMA work units, the FIFO, errors,
                  interrupts, and triggers.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} indicates the status of DMA work units, FIFO status, DMA
              errors, and interrupts and triggers.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>599efce5d687baf986489b27a27b96e0</BF-UID>	<!-- Name: IRQDONE -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>7bb762dbba0b7dee38b58680addf2288</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>196f13b5a1181c41637de73dc41dfa2b</BF-UID>	<!-- Name: IRQERR -->
                <BitOffset>0</BitOffset>
                <RegOffset>1</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>3289a5bf922a37def5e5ac4793805939</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>3591ee33bd99cff3b61e67abedc41207</BF-UID>	<!-- Name: PIRQ -->
                <BitOffset>0</BitOffset>
                <RegOffset>2</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>095a77bdd83de3118dcdbbf890e0c109</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>0e79b2a8e81c2bf2358a4b3bb9767abc</BF-UID>	<!-- Name: ERRC -->
                <BitOffset>0</BitOffset>
                <RegOffset>4</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>a08fad35631b771b041e3fe274acb787</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>b8655241283b30570e9b1d4632815e8e</BF-UID>	<!-- Name: RUN -->
                <BitOffset>0</BitOffset>
                <RegOffset>8</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>f110d637ebf1b352bd5c19a0c863e694</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>6f1283627a0320b4560992e134d7ca57</BF-UID>	<!-- Name: PBWID -->
                <BitOffset>0</BitOffset>
                <RegOffset>12</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>2</SliceWidth>
                <UID>de997425413cf20454a772414bcc182c</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>3afb3ba4e34af0e4d56d8eacd4beb3be</BF-UID>	<!-- Name: MBWID -->
                <BitOffset>0</BitOffset>
                <RegOffset>14</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>2</SliceWidth>
                <UID>4257b1fe8790bfef86c008fb0369dea8</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>8b7eab8d4d2622721625c8a5032a80a8</BF-UID>	<!-- Name: FIFOFILL -->
                <BitOffset>0</BitOffset>
                <RegOffset>16</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>3</SliceWidth>
                <UID>785813bf6997783ee9d06cc8a10bc305</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>f22e9cd91482ab3202c443d264a2c877</BF-UID>	<!-- Name: STATUS_TWAIT -->
                <BitOffset>0</BitOffset>
                <RegOffset>20</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>1</SliceWidth>
                <UID>a4616e9010155646aca66e89ae5f9693</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>XCOUNTCURR</Name>
            <UID>d57def7d06e26e78d4e3d3dcdfc6505c</UID>
            <Address>'h34</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Current Count(1D) or intra-row XCNT (2D)</Description>
            <DocSets>
              <Set1>
                <Description>Current Count (1D) or Intra-row XCNT (2D) Register</Description>
                <Documentation>For 1D DMA, the ${.} loads the ${.:.} register from the ${.:XCNT} register at
                  the beginning of each work unit. For 2D DMA, the ${.} loads the ${.:.} register from the
                  ${.:XCNT} register after the end of each row. The ${.} decrements the value in
                  ${.:.} register each time a ${.:CFG:MSIZE} size data transfer occurs. When the count in
                  ${.:.} register expires, the work unit is complete. In 2D DMA, the ${.:.} value is 0 only
                  when the entire transfer is complete.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>For 1D DMA, the ${.} loads the ${.:.} from the ${.:XCOUNT} register at the
              beginning of each work unit. For 2D DMA, the ${.} loads ${.:.} from the ${.:XCOUNT}
              register after the end of each row. The ${.} decrements the value in ${.:.} each time
              a ${.:CONFIG:MSIZE} size data transfer occurs, given that ${.:BWLCOUNT} register is not loaded. When the count in ${.:.} expires, the memory read/write request is completed. In 2D DMA, the ${.:.} value is 0 only when the entire transfer is
              complete.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>fe7bb37454a934818cc37cc546ec5295</BF-UID>	<!-- Name: XCOUNTCURR -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>3556f98aaec67d9b0c2ae7a5df533a52</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>YCOUNTCURR</Name>
            <UID>7bf84fc8c110d553a0ecddbd38595220</UID>
            <Address>'h38</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Current Row Count (2D only)</Description>
            <DocSets>
              <Set1>
                <Description>Current Row Count (2D only) Register</Description>
                <Documentation>For 2D DMA, the ${.} loads the ${.:.} register from the ${.:YCNT} register at
                  the beginning of each 2D DMA session. The ${.:.} register is not used for 1D DMA. The ${.}
                  decrements the ${.:.} register each time the ${.:XCNT_CUR} register expires during 2D DMA operation,
                  signifying the completion of an entire row transfer.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>For 2D DMA, the ${.} loads the ${.:.} register from the ${.:YCOUNT}
              register at the beginning of each 2D DMA session. Do not use the ${.:.} register for
              1D DMA. The ${.} decrements the ${.:.} register value each time the ${.:XCOUNTCURR}
              register value expires during 2D DMA operation, signifying completion of an entire row
              transfer.</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>67f98acc7d3513c705173f182d89c0cf</BF-UID>	<!-- Name: YCOUNTCURR -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>cad7cd5956ebe0112f659f389657d06b</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>BWLCOUNT</Name>
            <UID>0057c8584ba2913f92a6d2bd87f7408f</UID>
            <Address>'h40</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Bandwidth Limit Count</Description>
            <DocSets>
              <Set1>
                <Description>Bandwidth Limit Count Register</Description>
                <Documentation>The ${.:.} register contains a count that determines how often the ${.} issues
                  memory transactions. The ${.} loads the value from the ${.:.} register into the ${.:BWLCNT_CUR} register and
                  decrements the current value each  \eval{SCLK} cycle. When ${.:BWLCNT_CUR} reaches 0x0000,
                  the next request is issued, and the ${.} reloads ${.:BWLCNT_CUR}. This bandwidth
                  limit functionality is not applied to descriptor fetch requests. Programming
                  0x0000 allows the ${.} to request as often as possible. 0xFFFF is a special case
                  and causes requests to stop.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains a count that determines how often the ${.}
              issues memory transactions. The ${.} loads the value from the ${.:.} register into the
              ${.:BWLCOUNTCURR} register and decrements the current value each SCLK cycle, given that ${.:.} is not         0xFFFF. When the
              value in ${.:BWLCOUNTCURR} reaches 0x0000, the next request issues, and the ${.} reloads
              the ${.:BWLCOUNTCURR} register. This bandwidth limit functionality does not apply to
              descriptor fetch requests. Programming 0x0000 into this register allows the ${.} to
              issue requests as often as possible. Programing 0xFFFF is a special case and causes
              requests to stop.</Documentation>
            <Exists>=(BW_EN==1)</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>f0570168b1d89c39f095b2964eab40a5</BF-UID>	<!-- Name: BWLCOUNT -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>16</SliceWidth>
                <UID>717bc74c0fba0bb8df7aa1a114c9da47</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>BWLCOUNTCURR</Name>
            <UID>84880c284dc3be67ca96ab54785a8cc7</UID>
            <Address>'h44</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Bandwidth Limit Count Current</Description>
            <DocSets>
              <Set1>
                <Description>Bandwidth Limit Count Current Register</Description>
                <Documentation>The ${.:.} register contains the number of  \eval{SCLK} count cycles remaining before
                  the next request is issued.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} register contains the number of SCLK count cycles remaining
              before DMA issues the next request.</Documentation>
            <Exists>=(BW_EN==1)</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>d63ccdd367e840c22de88dcbcd5d4142</BF-UID>	<!-- Name: BWLCOUNTCURR -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>16</SliceWidth>
                <UID>87ff62fe5da84cdc8d7706a77697bb76</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>BWMCOUNT</Name>
            <UID>cce15639cd98cfe267a3c5360a90bbe3</UID>
            <Address>'h48</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Bandwidth Monitor Count</Description>
            <DocSets>
              <Set1>
                <Description>Bandwidth Monitor Count Register</Description>
                <Documentation>The ${.:.} register contains the maximum number of  \eval{SCLK} cycles allowed for a
                  work unit to complete. Each time the ${.:CFG} register is written (MMR access
                  only), a work unit ends or an autobuffer wraps. The ${.} loads the value in this
                  register into the ${.:BWMCNT_CUR} register. $[/p$] $[p$]The ${.} decrements
                  ${.:BWMCNT_CUR} every  \eval{SCLK} a work unit is active. If the ${.:BWMCNT_CUR} register
                  reaches 0x0000_0000, the ${.:STAT:IRQERR} bit is set, and the ${.:STAT:ERRC} bit
                  field is set to 0x6. The ${.:BWMCNT_CUR} remains at 0x0000_0000 until it is
                  reloaded when the work unit completes. $[/p$] $[p$]Unlike other errors, a
                  bandwidth monitor error does not stop work unit processing. Programming
                  0x0000_0000 disables bandwidth monitor functionality.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The BWMCOUNT register contains the maximum number of SCLK cycles allowed for a work unit to complete. Each time DMA writes the CONFIG register (MMR access only), a work unit ends, or an autobuffer wraps, the loads the value in this
register into the BWMCOUNTCURR register. The ${.} decrements the value in the
              ${.:BWMCOUNTCURR} register every SCLK a work unit is active. If the value in the
              ${.:BWMCOUNTCURR} register reaches 0x0000_0000, the ${.:STATUS:IRQERR} bit is set, and the
              ${.:STATUS:ERRC} is set to 0x6. The ${.:BWMCOUNTCURR} value remains at 0x0000_0000 until
              reloaded when the work unit completes. Unlike other error causes, a bandwidth monitor
              error does not stop work unit processing. Programming this register with a value of
              0x0000 0000 disables bandwidth monitoring.</Documentation>
            <Exists>=(BW_EN==1)</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>e09f3dedee92e9fa765040fb1fc201bc</BF-UID>	<!-- Name: BWMCOUNT -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>b1c0091dea365c1c760b3ce35a44a243</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>BWMCOUNTCURR</Name>
            <UID>49570d8cc461088aba989210b3d92a7a</UID>
            <Address>'h4c</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Bandwidth Monitor Count Current</Description>
            <DocSets>
              <Set1>
                <Description>Bandwidth Monitor Count Current Register</Description>
                <Documentation>The ${.:.} register contains the number of cycles remaining for the current
                  descriptor to complete.</Documentation>
              </Set1>
            </DocSets>
            <Documentation>The ${.:.} contains the number of cycles remaining for the current
              descriptor to complete.</Documentation>
            <Exists>=(BW_EN==1)</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>Boolean</UIUIType>
            <UIWidget>CheckBox</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User>coda:target=&quot;All&quot;; coda:pmode=&quot;Supervisor&quot;</User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>d1602802a8dedb7a5419a02a4caa0f99</BF-UID>	<!-- Name: BWMCOUNTCURR -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>32</SliceWidth>
                <UID>e6e6b97af9e312d3c6769a48bc8e0091</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>DDE_ID_REG</Name>
            <UID>091386c6790baf66d76870c1ad04d33ce1d917f1</UID>
            <Address>'h50</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Identification Register</Description>
            <Documentation>Identification Register</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>=__AUTO__</UIUIType>
            <UIWidget>=__AUTO__</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User></User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>12591768f024124afb166e9f393979f449fc0de2</BF-UID>	<!-- Name: FLAVOR_ID -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>4</SliceWidth>
                <UID>49fd666e2c5e6e11fb271a465c7371daa6b285f1</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>6f8058ce5d1832b4a551689827e0281548c720a3</BF-UID>	<!-- Name: IP_ID -->
                <BitOffset>0</BitOffset>
                <RegOffset>4</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>10</SliceWidth>
                <UID>2b72312ad271e05b8f91f2143fbf31b5a6a633c5</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>153aaf8d4b1bbb2221c15462e553c3f8fcfc54a8</BF-UID>	<!-- Name: SCHEMA_ID -->
                <BitOffset>0</BitOffset>
                <RegOffset>14</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>2</SliceWidth>
                <UID>0b143898dcf0e8a09ea9029ddc90e5ea742e2b7d</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>DDE_REV_REG</Name>
            <UID>304264f8e07b35770c308e32e712f4eb13776725</UID>
            <Address>'h54</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Revision Number Register</Description>
            <Documentation>Revision Number Register</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>=__AUTO__</UIUIType>
            <UIWidget>=__AUTO__</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User></User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>55881ad7f1a0e81125729ea17423598877236e18</BF-UID>	<!-- Name: TRIVIAL_REV -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>4</SliceWidth>
                <UID>bed2a93feb7e3370e4e32d38a3ce381b0be19533</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>8974e6be89475e1175c8decb6feccbe2f07eb1ae</BF-UID>	<!-- Name: MINOR_REV -->
                <BitOffset>0</BitOffset>
                <RegOffset>4</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>4</SliceWidth>
                <UID>63f3d28b380946f0483606be09f1a24912a168bb</UID>
              </BitFieldRef>
              <BitFieldRef>
                <BF-UID>64e9dae3af9eb4456729832c598450e9ab915122</BF-UID>	<!-- Name: MAJOR_REV -->
                <BitOffset>0</BitOffset>
                <RegOffset>8</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>8</SliceWidth>
                <UID>074327cee09fa0cfb1d8afe43bd5ddcbdde1a68f</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
          <Register>
            <Name>DDE_PROG_REV_IF_REG</Name>
            <UID>239999e79e4ef18bcab757dab2db8ac464b1c6b7</UID>
            <Address>'h58</Address>
            <ArrayEnabled>False</ArrayEnabled>
            <ArrayLetter>n</ArrayLetter>
            <ArrayFrom>0</ArrayFrom>
            <ArrayTo>2</ArrayTo>
            <ArrayBy>1</ArrayBy>
            <ArrayStride>1</ArrayStride>
            <CmdFormat>BLOCK</CmdFormat>
            <Description>Programming Model Interface Register</Description>
            <Documentation>Programming Model Interface Register</Documentation>
            <Exists>True</Exists>
            <Indirect></Indirect>
            <IsAccessControlled></IsAccessControlled>
            <IsPecRequired></IsPecRequired>
            <IsStatusCmd></IsStatusCmd>
            <LinkSet></LinkSet>
            <Notes></Notes>
            <NumFormat>LINEAR</NumFormat>
            <UINotes></UINotes>
            <UIToolTip>=__AUTO__</UIToolTip>
            <UIUIType>=__AUTO__</UIUIType>
            <UIWidget>=__AUTO__</UIWidget>
            <UINumericBase>Hexadecimal</UINumericBase>
            <User></User>
            <Width>32</Width>
            <WriteProtectLevel>Level1</WriteProtectLevel>
            <BitFieldRefs>
              <BitFieldRef>
                <BF-UID>ce4826dbe0c30255a6473feace8236bd32f1d8b4</BF-UID>	<!-- Name: PROG_REV_IF -->
                <BitOffset>0</BitOffset>
                <RegOffset>0</RegOffset>
                <SecondaryAddress>0</SecondaryAddress>
                <SliceWidth>16</SliceWidth>
                <UID>d76359819f2bae8676a31528af307aacc20b0d67</UID>
              </BitFieldRef>
            </BitFieldRefs>
          </Register>
        </Registers>
      </RegisterMap>
    </RegisterMaps>
    <MemoryRegions>
      <UID>16ab235743d34f0d0275adcb3e3bf2c9</UID>
    </MemoryRegions>
  </MemoryMap>
  <Instances>
  </Instances>
  <Interrupts>
  </Interrupts>
  <Triggers>
  </Triggers>
  <DMAChannels>
  </DMAChannels>
  <ChipSignals>
  </ChipSignals>
  <Pads>
  </Pads>
  <Packages>
  </Packages>
  <FunctionalGroups>
    <UID>e8f4945415fffa75a8f4bb938ae6df81d42c76e6</UID>
  </FunctionalGroups>
  <Suppressions>
    <Suppression>
      <UID>60418545fb3f5ec6ec3bc4587b8eb5ba86b11fe4</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>RegisterMap</TargetType>
    </Suppression>
    <Suppression>
      <UID>6c2479e12a397137bc87d23f83b32d9c3f499b25</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>EnumElement</TargetType>
    </Suppression>
    <Suppression>
      <UID>7d7e73ff3bb73b5dcdb0d17ff0c413531a8cb6bd</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>Register</TargetType>
    </Suppression>
    <Suppression>
      <UID>a59342b76a3037650afea66c99be3dbcdeb7061c</UID>
      <Scope>SingleObject</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <ObjectUID>f0464ad7e8ec9cc17d1236f54909152b</ObjectUID> <!-- Parameter/EB_MDMA_RD -->
    </Suppression>
    <Suppression>
      <UID>b1faa38c63876cf3d701f46caf8c49cee0842509</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>BitField</TargetType>
    </Suppression>
    <Suppression>
      <UID>b8db08410807d97d7e1ce58edbcead60cb2c5602</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>Port</TargetType>
    </Suppression>
    <Suppression>
      <UID>ed5a17893914ed3dc1ec722185345b28ccc69ea2</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1096</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>Parameter</TargetType>
    </Suppression>
    <Suppression>
      <UID>5772f7f5dde5977d7c586b916d576310433abc36</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1097</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>Parameter</TargetType>
    </Suppression>
    <Suppression>
      <UID>25140e52a3bb95c7d03b427fbdf78364bec19c3a</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1098</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>Register</TargetType>
    </Suppression>
    <Suppression>
      <UID>f60e9db510d265d05c4c08a764747718842864f4</UID>
      <Scope>AllOfTypeAndProperty</Scope>
      <ErrorNumber>1098</ErrorNumber>
      <Property>DocSets</Property>
      <Notes></Notes>
      <TargetType>BitField</TargetType>
    </Suppression>
  </Suppressions>
</Module>
